{"version":3,"sources":["file:///E:/myCocosGame/mySimpleGame/assets/simple-run/scripts/PlayerController.ts"],"names":["_decorator","Component","Vec3","CCFloat","input","Input","SkeletalAnimationComponent","AudioClip","AudioSourceComponent","AnimationComponent","tween","GameDefines","GameState","ccclass","property","tempVec3_a","MoveAction","MoveState","cocosAnim","idle","run","jump","PlayerController","type","onTriggerCoin","onTriggerBlock","_pressedX","_pressedY","_moveState","RUNNING","_gameState","INIT","_audioSourceComp","start","getComponent","onGameStateChanged","state","onGameInit","PLAYING","onGamePlaying","END","onGameEnd","playerAnimComp","play","node","setPosition","set","jumpState","getState","on","EventType","FINISHED","onJumpEnd","TOUCH_START","onViewTouchStart","TOUCH_END","onViewTouchEnd","off","onTriggerEnter","event","console","log","triggerNode","otherCollider","name","playOneShot","coinAC","animComp","downName","isPlaying","location","getLocation","x","y","touchPoint","endX","endY","Math","abs","move","LEFT","RIGHT","UP","moveAction","by","position","leftLineX","onComplete","MOVING_LEFT","rightLineX","MOVING_RIGHT","jumpAC","crossFade","speed","JUMPING","update","deltaTime","translate","onDestroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, CCFloat,input, Input,SkeletalAnimationComponent, AudioClip, AudioSourceComponent, AnimationComponent, EventTouch, tween, ITriggerEvent } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport {GameDefines, GameState} from './GameDefines';\r\nconst tempVec3_a = new Vec3();\r\n\r\nenum MoveAction {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n}\r\n\r\nenum MoveState {\r\n    RUNNING,\r\n    MOVING_LEFT,\r\n    MOVING_RIGHT,\r\n    JUMPING,\r\n}\r\nconst cocosAnim = {\r\n    idle: 'cocos_anim_idle',\r\n    run: 'cocos_anim_run',\r\n    jump: 'cocos_anim_jump',\r\n}\r\n@ccclass('PlayerController')\r\nexport class PlayerController extends Component {\r\n    @property({type: CCFloat})\r\n    public speed: number = 1;\r\n// 骨骼动画组件\r\n    @property({type: SkeletalAnimationComponent})\r\n    public playerAnimComp: SkeletalAnimationComponent = null;\r\n    @property({type: AudioClip})\r\n    public coinAC: AudioClip = null;\r\n    @property({type: AudioClip})\r\n    public jumpAC: AudioClip = null;\r\n    public onTriggerCoin: (coinNode: Node) => void;\r\n    public onTriggerBlock: (roadBlockNode: Node) => void;\r\n\r\n    private _pressedX = 0;\r\n    private _pressedY = 0;\r\n\r\n    private _moveState: MoveState = MoveState.RUNNING;\r\n    private _gameState: GameState = GameState.INIT;\r\n\r\n    private _audioSourceComp: AudioSourceComponent = null;\r\n    start() {\r\n\r\n        this._audioSourceComp = this.getComponent(AudioSourceComponent);\r\n    }\r\n    // 切换游戏状态\r\n    onGameStateChanged(state: GameState) {\r\n        switch(state) {\r\n            case GameState.INIT:\r\n                this.onGameInit();\r\n                break;\r\n            case GameState.PLAYING:\r\n                this.onGamePlaying();\r\n                break;\r\n            case GameState.END:\r\n                this.onGameEnd();\r\n                break;\r\n        }\r\n\r\n        this._gameState = state;\r\n    }\r\n    // 游戏初始\r\n    onGameInit() {\r\n        // 播放动画\r\n        this.playerAnimComp.play(cocosAnim.idle);\r\n        // 设置位置\r\n        this.node.setPosition(tempVec3_a.set(0, 0, 0));\r\n    }\r\n    // 开始游戏\r\n    onGamePlaying() {\r\n        // 切换状态位\r\n        this._moveState = MoveState.RUNNING;\r\n        // 播放跑步动画\r\n        this.playerAnimComp.play(cocosAnim.run);\r\n        const jumpState = this.playerAnimComp.getState(cocosAnim.jump);\r\n        // 注册监听\r\n        jumpState.on(AnimationComponent.EventType.FINISHED, this.onJumpEnd,this);\r\n        input.on(Input.EventType.TOUCH_START, this.onViewTouchStart, this);\r\n        input.on(Input.EventType.TOUCH_END, this.onViewTouchEnd, this);\r\n\r\n    }\r\n    // 游戏结束\r\n    onGameEnd() {\r\n        const jumpState = this.playerAnimComp.getState(cocosAnim.jump);\r\n        jumpState.off(AnimationComponent.EventType.FINISHED, this.onJumpEnd, this);\r\n\r\n        input.off(Input.EventType.TOUCH_START, this.onViewTouchStart, this);\r\n        input.off(Input.EventType.TOUCH_END, this.onViewTouchEnd, this);\r\n    }\r\n    // 处理碰撞\r\n    onTriggerEnter(event: ITriggerEvent) {\r\n        console.log(\"onTriggerEnter====================\")\r\n        const triggerNode: Node = event.otherCollider.node;\r\n        if (triggerNode.name === 'Coin') {\r\n            this._audioSourceComp.playOneShot(this.coinAC);\r\n            if (this.onTriggerCoin) {\r\n                this.onTriggerCoin(triggerNode);\r\n            }\r\n        } else if (triggerNode.name === 'RoadBlock') {\r\n            const animComp = triggerNode.getComponent(AnimationComponent);\r\n            const downName = 'block_down';\r\n            const state = animComp.getState(downName);\r\n            if (!state.isPlaying) {\r\n                animComp.play(downName);\r\n            }\r\n            if (this.onTriggerBlock) {\r\n                this.onTriggerBlock(triggerNode);\r\n            }\r\n        }\r\n    }\r\n    // 跳跃动作结束\r\n    onJumpEnd(type, state) {\r\n        if (state?.name === cocosAnim.jump) {\r\n            this.playerAnimComp.play(cocosAnim.run);\r\n            this._moveState = MoveState.RUNNING;\r\n        }\r\n    }\r\n    // 触摸开始\r\n    onViewTouchStart(event: EventTouch) {\r\n        let location = event.getLocation();// 获取节点坐标\r\n        // 记录触摸开始位置\r\n        this._pressedX = location.x;\r\n        this._pressedY = location.y;\r\n    }\r\n    //触摸结束\r\n    onViewTouchEnd(event: EventTouch) {\r\n        let touchPoint = event.getLocation();\r\n        let endX = this._pressedX - touchPoint.x;\r\n        let endY = this._pressedY - touchPoint.y;\r\n\r\n        if (Math.abs(endX) > Math.abs(endY)){\r\n            //手势向左右\r\n            //判断向左还是向右\r\n            if (endX  > 0){\r\n                // left\r\n                this.move(MoveAction.LEFT);\r\n            } else {\r\n                // right\r\n                this.move(MoveAction.RIGHT);\r\n            }\r\n        } else {\r\n            //手势向上下\r\n            //判断手势向上还是向下\r\n            if (endY  > 0){\r\n                // down\r\n            } else {\r\n                // up\r\n                this.move(MoveAction.UP);\r\n            }\r\n         }\r\n    }\r\n    move(moveAction: MoveAction) {\r\n        switch (moveAction) {\r\n            case MoveAction.LEFT:\r\n                if (this._moveState === MoveState.RUNNING) {\r\n                    tween(this.node)\r\n                        .by(0.5, {position: new Vec3(GameDefines.leftLineX, 0, 0)}, {onComplete: ()=> {\r\n                            this._moveState = MoveState.RUNNING;\r\n                        }})\r\n                        .start();\r\n                    this._moveState = MoveState.MOVING_LEFT;\r\n                }\r\n                break;\r\n            case MoveAction.RIGHT:\r\n                if (this._moveState === MoveState.RUNNING) {\r\n                    tween(this.node)\r\n                    .by(0.5, {position: new Vec3(GameDefines.rightLineX, 0, 0)}, {onComplete: ()=> {\r\n                        this._moveState = MoveState.RUNNING;\r\n                    }})\r\n                    .start();\r\n                    this._moveState = MoveState.MOVING_RIGHT;\r\n                }\r\n                break;\r\n            case MoveAction.UP:\r\n                if (this._moveState === MoveState.RUNNING) {\r\n                    this._audioSourceComp.playOneShot(this.jumpAC);\r\n                    this.playerAnimComp.crossFade(cocosAnim.jump);\r\n                    const state = this.playerAnimComp.getState(cocosAnim.jump);\r\n                    state.speed = 1.5;\r\n                    tween(this.node)\r\n                    .by(0.75, {position: new Vec3(0, 0, 10)}, {onComplete: ()=> {\r\n                        // this._moveState = MoveState.RUNNING;\r\n                    }})\r\n                    .start();\r\n                    this._moveState = MoveState.JUMPING;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    update (deltaTime: number) {\r\n        if (this._gameState === GameState.PLAYING) {\r\n            if (this._moveState === MoveState.JUMPING) {\r\n                // this.node.translate(tempVec3_a.set(0, 0, this.speed * 1.5 * deltaTime));\r\n            } else {\r\n                this.node.translate(tempVec3_a.set(0, 0, this.speed * deltaTime));\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        input.off(Input.EventType.TOUCH_START, this.onViewTouchStart, this);\r\n        input.off(Input.EventType.TOUCH_END, this.onViewTouchEnd, this);\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}