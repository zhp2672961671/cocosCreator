{"version":3,"sources":["file:///E:/myCocosGame/mySimpleGame/assets/simple-run/scripts/PlayerController.ts"],"names":["_decorator","Component","Vec3","CCFloat","SkeletalAnimationComponent","AudioClip","ccclass","property","tempVec3_a","MoveAction","MoveState","PlayerController","type","start","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,O,OAAAA,O;AAASC,MAAAA,0B,OAAAA,0B;AAA4BC,MAAAA,S,OAAAA,S;;;;;;;;;OAC3E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AACxBQ,MAAAA,U,GAAa,IAAIN,IAAJ,E;;iBAEdO,U;AAAAA,QAAAA,U,CAAAA,U;AAAAA,QAAAA,U,CAAAA,U;AAAAA,QAAAA,U,CAAAA,U;SAAAA,U,KAAAA,U;;iBAMAC,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;kCAOQC,gB,WADZL,OAAO,CAAC,kBAAD,C,UAEHC,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAET;AAAP,OAAD,C,UAGRI,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAER;AAAP,OAAD,C,UAERG,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,UAERE,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,2BATb,MACaM,gBADb,SACsCV,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAU5CY,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAhB2C,O;;;;;iBAErB,C;;;;;;;iBAG6B,I;;;;;;;iBAEzB,I;;;;;;;iBAEA,I","sourcesContent":["import { _decorator, Component, Node, Vec3, CCFloat, SkeletalAnimationComponent, AudioClip } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nconst tempVec3_a = new Vec3();\r\n\r\nenum MoveAction {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n}\r\n\r\nenum MoveState {\r\n    RUNNING,\r\n    MOVING_LEFT,\r\n    MOVING_RIGHT,\r\n    JUMPING,\r\n}\r\n@ccclass('PlayerController')\r\nexport class PlayerController extends Component {\r\n    @property({type: CCFloat})\r\n    public speed: number = 1;\r\n\r\n    @property({type: SkeletalAnimationComponent})\r\n    public playerAnimComp: SkeletalAnimationComponent = null;\r\n    @property({type: AudioClip})\r\n    public coinAC: AudioClip = null;\r\n    @property({type: AudioClip})\r\n    public jumpAC: AudioClip = null;\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}