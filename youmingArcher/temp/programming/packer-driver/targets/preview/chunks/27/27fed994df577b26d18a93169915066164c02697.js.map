{"version":3,"sources":["file:///E:/myCocosGame/youmingArcher/assets/script/fight/gameManager.ts"],"names":["_decorator","Component","Node","CameraComponent","Vec3","SkeletalAnimationComponent","ParticleSystemComponent","AnimationComponent","find","Prefab","EffectManager","ClientEvent","PlayerData","Monster","UIManager","MapManager","GameCamera","Player","ResourceUtil","Constant","LocalConfig","AudioManager","Util","PoolManager","ccclass","property","GameManager","type","mapInfo","_dictMonsterSkill","_oriMainLightWorPos","_offsetWorPosMainLight","isWin","value","_isWin","isGameStart","dispatchEvent","EVENT_TYPE","ON_GAME_OVER","gameSpeed","console","log","_gameSpeed","refreshEffectSpeed","ndGameManager","ndPlayer","ndEffectManager","onEnable","on","ON_GAME_INIT","_onGameInit","_onGameOver","ON_GAME_PAUSE","_onGamePause","REFRESH_LEVEL","_refreshLevel","RECYCLE_ALL","_recycleAll","onDisable","off","start","mainCamera","camera","getComponent","scriptGameCamera","node","ndMapManager","ndLight","worldPosition","clone","isTesting","window","uiManager","instance","playerData","clientEvent","constant","level","playerInfo","totalLevel","getTableArr","length","queryByID","String","attackAddition","defenseAddition","hpAddition","moveSpeedAddition","attackSpeedAddition","HIDE_WARP_GATE","isGamePause","isGameOver","isRevive","arrMonster","ndBoss","existentNum","addFightTimes","pauseAll","showDialog","arrMap","mapName","split","Math","floor","random","preloadMonsterSkill","then","_loadMap","_createPlayer","scriptPlayer","preloadArrow","HIDE_LOADING_PANEL","resetPlayerState","cb","scriptMapManager","buildMap","loadModelRes","pf","getNode","ndFollowTarget","init","recycle","i","children","ndChild","name","putNode","hideDialog","nextLevel","Number","highestLevel","getNearestMonster","arr","sort","a","b","distanceA","getTwoNodeXZLength","distanceB","filter","item","scriptMonster","parent","isDie","getNearbyMonster","ndMonster","isAll","range","concat","index","idx","targetNode","arrAni","getComponentsInChildren","forEach","clips","clip","aniName","aniState","getState","speed","arrSkeletalAni","arrParticle","simulationSpeed","addGold","updatePlayerInfo","ceil","REFRESH_GOLD","Promise","resolve","reject","arrLoadSkill","arrInfo","ID","startsWith","arrSkill","element","skill","id","push","itemId","num","arrPromise","skillInfo","p","loadEffectRes","resName","prefab","ndSkillCollider","setWorldPosition","x","z","all","catch","e","error","checkTriggerAll","SHOW_WARP_GATE","preloadArrowEffects","loadDirRes","err","pfs","preloadPool","arrowName","update","deltaTime","subtract","set","add","scriptBoss","isFirstLoad"],"mappings":"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","sourcesContent":["import { EffectManager } from './../framework/effectManager';\nimport { ClientEvent } from './../framework/clientEvent';\nimport { PlayerData } from './../framework/playerData';\nimport { Monster } from './monster';\nimport { UIManager } from './../framework/uiManager';\nimport { MapManager } from './mapManager';\nimport { _decorator, Component, Node, CameraComponent, Vec3, SkeletalAnimationComponent, ParticleSystemComponent, AnimationComponent, find, Prefab} from 'cc';\nimport { GameCamera } from './gameCamera';\nimport { Player } from './player';\nimport { ResourceUtil } from '../framework/resourceUtil';\nimport { Constant } from '../framework/constant';\nimport { LocalConfig } from '../framework/localConfig';\nimport { Boss } from './boss';\nimport { AudioManager } from '../framework/audioManager';\nimport { Util } from '../framework/util';\nimport { PoolManager } from '../framework/poolManager';\nconst { ccclass, property } = _decorator;\n//游戏管理脚本\n@ccclass('GameManager')\nexport class GameManager extends Component {\n    @property(GameCamera)\n    public camera: GameCamera = null!;//相机脚本\n\n    @property({type: MapManager})\n    public scriptMapManager: MapManager = null!;//地图脚本脚本\n\n    @property(Node)\n    public ndLight: Node = null!; //主光源\n\n    public mapInfo: any = {};//地图信息\n\n    public static mainCamera: CameraComponent | null = null;//相机脚本\n    public static isGameStart: boolean = false;//游戏是否开始\n    public static isGamePause: boolean = false;//游戏是否暂停\n    public static isGameOver: boolean = false;//游戏是否结束\n    public static scriptPlayer: Player = null!;//玩家脚本\n    public static scriptGameCamera: GameCamera;//相机脚本\n    public static ndPlayer: Node = null!;//玩家节点\n    public static ndBoss: Node = null!;//boss节点\n    public static scriptBoss: Boss = null!;//boss脚本\n    public static ndGameManager: Node;//游戏全局管理节点\n    public static ndEffectManager: Node = null!;//特效节点\n    public static ndMapManager: Node = null!;//地图节点\n    public static isRevive: boolean = false;//玩家是否复活\n    public static isTesting: boolean = true;//是否开启测试代码\n    public static isFirstLoad: boolean = false;//是否首次加载\n    public static arrMonster: Node[] = []; //小怪、boss数组\n    public static existentNum: number = 0;//本层加载的npc、大爱心现存数量（怪物不会和npc、大爱心同时出现，配置表格需注意）\n    //本层敌人加成\n    public static attackAddition: number = 1;//本层敌人攻击加成\n    public static defenseAddition: number = 1;//本层敌人防御加成\n    public static hpAddition: number = 1;//本层敌人生命加成\n    public static moveSpeedAddition: number = 1;//本层敌人移速加成\n    public static attackSpeedAddition: number = 1;//本层敌人攻速加成\n\n    public static set isWin (value: boolean) {\n        this._isWin = value;\n\n        if (GameManager.isGameStart) {\n            ClientEvent.dispatchEvent(Constant.EVENT_TYPE.ON_GAME_OVER);            \n        }\n    }\n\n    public static get isWin () {\n        return this._isWin;\n    }\n\n    public static set gameSpeed (value: number) {\n        console.log(\"gameSpeed\",GameManager.gameSpeed);\n\n        this._gameSpeed = value;\n        GameManager.refreshEffectSpeed(GameManager.ndGameManager, this._gameSpeed);\n        GameManager.refreshEffectSpeed(GameManager.ndPlayer as Node, this._gameSpeed);\n        GameManager.refreshEffectSpeed(GameManager.ndEffectManager as Node, this._gameSpeed);\n    };\n\n    public static get gameSpeed () {\n        return this._gameSpeed;\n    }\n\n    private _dictMonsterSkill: any = {};//已经预加载的敌人技能\n    private _oriMainLightWorPos: Vec3 = null!;//主光源节点初始世界坐标\n    private _offsetWorPosMainLight: Vec3 = new Vec3();//主光源和玩家的向量差\n\n    private static _gameSpeed: number = 1;//游戏速度\n    private static _isWin: boolean = false;//是否取得胜利\n\n    onEnable () {\n        ClientEvent.on(Constant.EVENT_TYPE.ON_GAME_INIT, this._onGameInit, this);\n        ClientEvent.on(Constant.EVENT_TYPE.ON_GAME_OVER, this._onGameOver, this);\n        ClientEvent.on(Constant.EVENT_TYPE.ON_GAME_PAUSE, this._onGamePause, this);\n        ClientEvent.on(Constant.EVENT_TYPE.REFRESH_LEVEL, this._refreshLevel, this);\n        ClientEvent.on(Constant.EVENT_TYPE.RECYCLE_ALL, this._recycleAll, this);\n    }\n\n    onDisable () {\n        ClientEvent.off(Constant.EVENT_TYPE.ON_GAME_INIT, this._onGameInit, this);\n        ClientEvent.off(Constant.EVENT_TYPE.ON_GAME_OVER, this._onGameOver, this);\n        ClientEvent.off(Constant.EVENT_TYPE.ON_GAME_PAUSE, this._onGamePause, this);\n        ClientEvent.off(Constant.EVENT_TYPE.REFRESH_LEVEL, this._refreshLevel, this);\n        ClientEvent.off(Constant.EVENT_TYPE.RECYCLE_ALL, this._recycleAll, this);\n    }\n\n    start () {\n        GameManager.mainCamera = this.camera?.getComponent(CameraComponent) as CameraComponent;\n        GameManager.scriptGameCamera = this.camera?.getComponent(GameCamera) as GameCamera;\n        GameManager.ndGameManager = this.node;\n        GameManager.ndMapManager = find(\"mapManager\") as Node;\n        GameManager.ndEffectManager = find(\"effectManager\") as Node;\n\n        this._oriMainLightWorPos = this.ndLight.worldPosition.clone();\n\n        if (GameManager.isTesting) {\n            //@ts-ignore\n            window.uiManager = UIManager.instance;      \n            //@ts-ignore\n            window.AudioManager = AudioManager.instance;\n            //@ts-ignore\n            window.playerData = PlayerData.instance;\n            //@ts-ignore\n            window.clientEvent = ClientEvent;      \n            //@ts-ignore\n            window.ndGameManager = GameManager.ndGameManager;\n            //@ts-ignore\n            window.GameManager = GameManager;\n            //@ts-ignore\n            window.ndMapManager = GameManager.ndMapManager;\n            //@ts-ignore\n            window.EffectManager = EffectManager.instance;\n            //@ts-ignore\n            window.ndEffectManager = GameManager.ndEffectManager;\n            //@ts-ignore\n            window.constant = Constant;\n            //@ts-ignore\n            //@ts-ignore\n        }\n    }\n\n    /**\n     * 初始化游戏\n     */\n    private _onGameInit () {   \n        let level = PlayerData.instance.playerInfo.level;\n\n        let totalLevel = LocalConfig.instance.getTableArr(\"checkpoint\").length;\n        //游戏通关后从倒数第10关开始循环(61-70)\n        if (level > totalLevel) {\n            level = (totalLevel - 10) + (level - totalLevel) % 10;  \n        } \n        \n        this.mapInfo = LocalConfig.instance.queryByID(\"checkpoint\", String(level));\n        //设置本层敌人属性加成比例\n        GameManager.attackAddition = this.mapInfo.attackAddition;\n        GameManager.defenseAddition = this.mapInfo.defenseAddition;\n        GameManager.hpAddition = this.mapInfo.hpAddition;\n        GameManager.moveSpeedAddition = this.mapInfo.moveSpeedAddition;\n        GameManager.attackSpeedAddition = this.mapInfo.attackSpeedAddition;\n\n        ClientEvent.dispatchEvent(Constant.EVENT_TYPE.HIDE_WARP_GATE);\n\n        GameManager.isGameStart = false;\n        GameManager.isGamePause = false;\n        GameManager.isGameOver = false;    \n        GameManager.isWin = false;\n        GameManager.isRevive = false;\n        GameManager.arrMonster = [];\n        GameManager.gameSpeed = 1;\n        GameManager.ndBoss = null!;\n        GameManager.existentNum = 0;\n\n        PlayerData.instance.addFightTimes();\n\n        AudioManager.instance.pauseAll();\n\n        // if (GameManager.isFirstLoad) {\n        //     this._refreshLevel();\n        // } else {\n            UIManager.instance.showDialog(\"loading/loadingPanel\", [()=>{\n                this._refreshLevel();\n            }]);\n        // }\n    }\n\n    /**\n     * 刷新关卡, 后期优化写法。。。\n     */\n    private _refreshLevel () {\n        //每层随机一张地图\n        let arrMap = this.mapInfo.mapName.split(\"#\");\n        let mapName = arrMap[Math.floor(Math.random() * arrMap.length)];\n        \n        this.preloadMonsterSkill(mapName).then(()=>{\n            this._recycleAll();\n            this._loadMap(mapName, ()=>{\n                //第一次进入或者失败后被销毁需要重新创建\n                if (!GameManager.ndPlayer) {\n                    this._createPlayer();\n                } else {\n                    GameManager.scriptPlayer.preloadArrow(()=>{\n                        console.log(\"###_refreshLevel1\");\n                        ClientEvent.dispatchEvent(Constant.EVENT_TYPE.HIDE_LOADING_PANEL, ()=>{\n                            GameManager.scriptPlayer.resetPlayerState();\n                        });\n                    })\n                }\n            });\n        })\n    }\n\n    /**\n     * 加载地图数据\n     *\n     * @private\n     * @param {Function} [cb=()=>{}]\n     * @memberof GameManager\n     */\n    private _loadMap (mapName: string, cb: Function = ()=>{}) {   \n        this.scriptMapManager.buildMap(mapName, ()=>{}, ()=>{\n            cb && cb();\n        })\n    }\n\n    /**\n     * 创建玩家\n     *\n     * @private\n     * @memberof GameManager\n     */\n    private _createPlayer () {      \n        ResourceUtil.loadModelRes(\"player/player01\").then((pf: any)=>{\n            GameManager.ndPlayer = PoolManager.instance.getNode(pf, this.node) as Node;\n            \n            let scriptGameCamera = GameManager.mainCamera?.node.getComponent(GameCamera) as GameCamera;\n            scriptGameCamera.ndFollowTarget = GameManager.ndPlayer;\n\n            let scriptPlayer = GameManager.ndPlayer?.getComponent(Player) as Player;\n            GameManager.scriptPlayer = scriptPlayer;\n            scriptPlayer?.init();\n\n            // if (GameManager.isFirstLoad) {\n            //     GameManager.isFirstLoad = false;\n            //     scriptPlayer.preloadArrow(()=>{\n            //         clientEvent.dispatchEvent(constant.EVENT_TYPE.REMOVE_NODE_GAME_START);\n            //     })\n            // } else {\n                scriptPlayer.preloadArrow(()=>{\n                    ClientEvent.dispatchEvent(Constant.EVENT_TYPE.HIDE_LOADING_PANEL);\n                })\n            // }\n        })\n    }\n\n    /**\n     * 回收怪兽, 武器，特效等\n     *\n     * @private\n     * @memberof GameManager\n     */\n    private _recycleAll () {\n        this.scriptMapManager.recycle();\n\n        for (let i = this.node.children.length - 1; i >= 0; i--) {\n            const ndChild = this.node.children[i];\n            if (ndChild.name !== \"player01\") {\n                PoolManager.instance.putNode(ndChild);\n            }\n        }\n\n        while(GameManager.ndEffectManager.children.length) {\n            PoolManager.instance.putNode(GameManager.ndEffectManager.children[0]);\n        }\n    }\n\n    /**\n     * 游戏结束\n     */\n    private _onGameOver () {\n        if (GameManager.isGameOver) {\n            return;\n        }\n\n        GameManager.isGamePause = true;\n\n        console.log(\"game over!\", \"isWin ?\", GameManager.isWin);\n\n        if (GameManager.isWin) {\n            UIManager.instance.hideDialog(\"fight/fightPanel\");\n\n            GameManager.isGameOver = true;\n\n            this._recycleAll();\n\n            let nextLevel = Number( PlayerData.instance.playerInfo.level) + 1;\n            PlayerData.instance.playerInfo.level = nextLevel;\n\n            //更新已解锁最高层级\n            if (nextLevel > PlayerData.instance.playerInfo.highestLevel) {\n                PlayerData.instance.playerInfo.highestLevel = nextLevel;\n            }\n\n            ClientEvent.dispatchEvent(Constant.EVENT_TYPE.ON_GAME_INIT);\n        } else {            \n            UIManager.instance.showDialog(\"revive/revivePanel\", [()=>{\n                if (GameManager.ndPlayer) {\n                    PoolManager.instance.putNode(GameManager.ndPlayer);\n                    GameManager.ndPlayer = null!;\n                    GameManager.scriptPlayer = null!;\n                }\n\n                this._recycleAll();\n            }]);\n        }\n    }\n\n    /**\n     * 游戏暂停\n     */\n    private _onGamePause () {\n        GameManager.isGamePause = true;\n    }\n\n    /**\n     * 获取距离最近的小怪、boss节点\n     * @returns \n     */\n    public static getNearestMonster () {\n        if (GameManager.arrMonster.length) {\n            let arr = GameManager.arrMonster.sort((a: any, b: any)=>{\n                let distanceA = Util.getTwoNodeXZLength(GameManager.ndPlayer, a);\n                let distanceB = Util.getTwoNodeXZLength(GameManager.ndPlayer, b);\n                return  distanceA - distanceB;\n            })\n    \n            arr = arr.filter((item: Node)=>{\n                let scriptMonster = item.getComponent(Monster) as Monster;\n                return item.parent !== null && !scriptMonster.isDie;\n            })\n\n            return arr[0];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * 获取除了怪物本身自己外一定范围内的怪物\n     *\n     * @static\n     * @param {Node} ndMonster 被击中的敌人\n     * @param {boolean} [isAll=false] 是否返回全部敌人,否则只随机返回一个\n     * @param {number} [range=5] 范围\n     * @return {*} \n     * @memberof GameManager\n     */\n    public static getNearbyMonster (ndMonster: Node, isAll: boolean = false, range: number = 7) {\n        //范围\n        let arrMonster: any[] = [];\n\n        if (GameManager.arrMonster.length) {\n            arrMonster = GameManager.arrMonster.concat();\n        }\n\n        arrMonster = arrMonster.filter((item: Node)=>{\n            let scriptMonster = item.getComponent(Monster) as Monster;\n            let length = Util.getTwoNodeXZLength(GameManager.ndPlayer, item);\n            return item.parent !== null && !scriptMonster.isDie && length <= range && ndMonster.worldPosition !== item.worldPosition;\n        })\n\n        if (arrMonster.length) {\n            if (!isAll) {\n                let index = Math.floor(Math.random() * arrMonster.length);\n                return arrMonster = arrMonster.filter((ndChild: Node, idx: number)=>{\n                    return idx === index;\n                })\n            } else {\n                return arrMonster;\n            }\n        } else {\n            return arrMonster;\n        }\n    }\n\n    /**\n     * 刷新节点下的动画、粒子播放速度\n     * @param targetNode \n     * @param value \n     * @returns \n     */\n     public static refreshEffectSpeed (targetNode: Node, value: number) {\n        if (!targetNode) {\n            return;\n        }   \n        let arrAni = targetNode.getComponentsInChildren(AnimationComponent);\n        arrAni.forEach((item: AnimationComponent)=>{\n            item.clips.forEach((clip: any)=>{\n                let aniName = clip?.name as string\n                let aniState = item.getState(aniName);\n                aniState.speed = value;\n            })\n        })\n\n        let arrSkeletalAni = targetNode.getComponentsInChildren(SkeletalAnimationComponent);\n        arrSkeletalAni.forEach((item: SkeletalAnimationComponent)=>{\n            item.clips.forEach((clip: any)=>{\n                let aniName = clip?.name as string\n                let aniState = item.getState(aniName);\n                aniState.speed = value;\n            })\n        })\n\n        let arrParticle = targetNode.getComponentsInChildren(ParticleSystemComponent);\n        arrParticle.forEach((item: ParticleSystemComponent)=>{\n            item.simulationSpeed = value;\n        })\n    }\n\n    /**\n     * 添加金币\n     *\n     * @static\n     * @param {number} [value=1]\n     * @memberof GameManager\n     */\n    public static addGold (value: number = 1) {\n        PlayerData.instance.updatePlayerInfo('gold', Math.ceil(value));\n        ClientEvent.dispatchEvent(Constant.EVENT_TYPE.REFRESH_GOLD);\n    }\n\n    /**\n     * 每层进入前预加载该层所需的敌人技能\n     *\n     * @private\n     * @memberof GameManager\n     */\n    public preloadMonsterSkill (mapName: string) {\n        return new Promise((resolve, reject)=>{\n            let arrLoadSkill: string[] = [];//等待预加载的技能\n            let arrInfo = LocalConfig.instance.getTableArr(mapName);\n            //获取所有敌人信息\n            arrInfo = arrInfo.filter((item: any)=>{\n                return item.ID.startsWith(\"2\");\n            })\n\n            //获得敌人技能列表\n            if (arrInfo.length) {\n                let arrSkill: any = [];\n                arrInfo.forEach((element: any) => {\n                    arrSkill = arrSkill.concat(element.skill === \"\" ? [] : element.skill.split(\"#\"));\n                });\n\n                arrSkill.length && arrSkill.forEach((id: string) => {\n                    if (!this._dictMonsterSkill[id]) {\n                        arrLoadSkill.push(id);\n                        this._dictMonsterSkill[id] = {\"num\": 1};\n                    } else {\n                        let arr = arrSkill.filter((itemId: any)=>{\n                            return itemId === id;\n                        })\n\n                        if (arr.length > this._dictMonsterSkill[id].num) {\n                            arrLoadSkill.push(id);\n                            this._dictMonsterSkill[id].num += 1;\n                        }\n                    }\n                });            \n\n                let arrPromise = [];\n\n                // console.log(\"需要预加载的技能数组\", arrLoadSkill, \"已经预加载的敌人技能\", this._dictMonsterSkill);\n\n                if (arrLoadSkill.length) {\n                    for (let i = 0; i < arrLoadSkill.length; i++) {\n                        const element = arrLoadSkill[i];  \n                        //预加载敌人技能\n                        let skillInfo = LocalConfig.instance.queryByID(\"monsterSkill\", element);\n                        let p = ResourceUtil.loadEffectRes(`${skillInfo.resName}/${skillInfo.resName}`).then((prefab: any)=>{\n                            let ndSkillCollider = PoolManager.instance.getNode(prefab, GameManager.ndGameManager as Node) as Node;\n                            ndSkillCollider.setWorldPosition(this.node.worldPosition.x, 30, this.node.worldPosition.z);\n                        })\n                        arrPromise.push(p);\n                    }\n        \n                    Promise.all(arrPromise).then(()=>{\n                        resolve(null);\n                    }).catch((e: any)=>{\n                        console.error(\"预加载敌人技能报错\", e);\n                    })\n                } else {\n                    resolve(null);\n                }\n            } else {\n                resolve(null);\n            }\n        })\n    }\n\n    /**\n     * 判断本层的爱心、npc是否都已经触发\n     *\n     * @static\n     * @memberof GameManager\n     */\n    public static checkTriggerAll () {\n        GameManager.existentNum -= 1;\n\n        if (GameManager.existentNum <= 0) {\n            ClientEvent.dispatchEvent(Constant.EVENT_TYPE.SHOW_WARP_GATE);\n        }\n    }\n\n    /**\n     * 预加载弓箭特效\n     * \n     * @static\n     * @param {number} num\n     * @returns\n     * @memberof GameManager\n     */\n    public static preloadArrowEffects (num: number) {\n       return new Promise((resolve, reject)=>{\n            ResourceUtil.loadDirRes(\"prefab/effect/arrow\", Prefab, (err: any, pfs: any)=>{\n                if (err) {\n                    console.error(err);\n                    reject(err);\n                } else {\n                    pfs.forEach((pf: Prefab) => {\n                        PoolManager.instance.preloadPool(pf, num);\n                    });\n\n                    resolve(null);\n                }\n            });\n       })\n    }\n\n    /**\n     * 预加载箭\n     *\n     * @static\n     * @param {string} arrowName\n     * @param {number} num\n     * @memberof GameManager\n     */\n    public static preloadArrow (arrowName: string, num: number) {\n        ResourceUtil.loadModelRes(`weapon/arrow/${arrowName}`).then((prefab: any)=>{\n            PoolManager.instance.preloadPool(prefab, num);\n        })\n    }\n\n    update (deltaTime: number) {\n         //光源跟随玩家人物移动\n         if (GameManager.scriptPlayer && GameManager.scriptPlayer.node && !GameManager.isGameOver) {\n            Vec3.subtract(this._offsetWorPosMainLight, GameManager.ndPlayer.worldPosition, this._oriMainLightWorPos);\n            this._offsetWorPosMainLight.set(this._offsetWorPosMainLight.x, 0, this._offsetWorPosMainLight.z);\n            this.ndLight.setWorldPosition(this._offsetWorPosMainLight.add(this._oriMainLightWorPos));\n        }\n    }\n}\n"]}