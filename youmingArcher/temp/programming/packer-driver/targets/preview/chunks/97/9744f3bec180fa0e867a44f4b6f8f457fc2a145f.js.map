{"version":3,"sources":["file:///E:/myCocosGame/youmingArcher/assets/script/fight/characterRigid.ts"],"names":["_decorator","Component","Vec3","RigidBodyComponent","EPSILON","Constant","ccclass","property","v3_0","v3_1","CharacterRigid","_rigidBody","_grounded","_velocity","_curMaxSpeed","_prevAngleY","_stateX","_stateZ","velocity","onGround","onLoad","getComponent","start","node","eulerAngles","y","initSpeed","moveSpeed","ratio","move","x","z","clearVelocity","stopMove","_updateCharacter","dt","updateFunction","set","normalize","negative","rigidMove","dir","speed","getLinearVelocity","scaleAndAdd","ms","len","lengthSqr","Math","abs","multiplyScalar","setLinearVelocity","_applyGravity","_applyDamping","_saveState","GAME_FRAME","pow","damping","g","gravity","m","mass","applyForce","update","dtS"],"mappings":"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","sourcesContent":["import { Constant } from '../framework/constant';\nimport { _decorator, Component, Vec3, RigidBodyComponent, EPSILON } from 'cc';\n//角色刚体碰撞检测脚本\nconst { ccclass, property } = _decorator;\nconst v3_0 = new Vec3();\nconst v3_1 = new Vec3();\n\n@ccclass('CharacterRigid')\nexport class CharacterRigid extends Component {    \n    @property\n    public damping:number = 0.5;//阻尼\n\n    @property\n    public gravity:number = -10;//重力\n\n    private _rigidBody: RigidBodyComponent = null!;\n    private _grounded = true;//是否着地\n    private _velocity = new Vec3();//线性速度\n    private _curMaxSpeed: number = 0;//当前最大速度\n    private _prevAngleY: number = 0;//之前的Y角度值\n\n    protected _stateX: number = 0;  // 1 positive, 0 static, -1 negative\n    protected _stateZ: number = 0;\n\n    get velocity () { return this._velocity; }\n    get onGround () { return this._grounded; }\n\n    onLoad () {\n        this._rigidBody = this.getComponent(RigidBodyComponent)!;\n    }\n\n    start () {\n      this._prevAngleY = this.node.eulerAngles.y;\n    }\n\n    /**\n     * 初始化角色最大速度\n     *\n     * @param {number} moveSpeed\n     * @param {number} [ratio=1]\n     * @memberof CharacterRigid\n     */\n    public initSpeed (moveSpeed: number,  ratio: number = 1) {\n        this._curMaxSpeed = moveSpeed * ratio;\n    }\n\n    /**\n     * 角色移动传入x和z\n     *\n     * @param {number} x\n     * @param {number} z\n     */\n    public move (x: number, z: number) {\n        if ((x > 0 && this._stateX < 0) || (x < 0 && this._stateX > 0) || (z > 0 && this._stateZ < 0) || (z < 0 && this._stateZ > 0)) {\n            this.clearVelocity();\n            // console.log(\"当前跟之前方向不一致则清除速度,避免惯性太大\");\n        }\n\n        this._stateX = x;\n        this._stateZ = z;\n        // console.log(\"_stateX\", this._stateX, \"z\", this._stateZ);\n    }\n\n    /**\n     * 刚体停止移动\n     *\n     */\n    public stopMove () {\n        this._stateX = 0;\n        this._stateZ = 0;\n        this.clearVelocity();\n    }\n\n    /**\n     * 更新刚体状态\n     *\n     * @private\n     * @param {number} dt\n     * @return {*} \n     */\n    private _updateCharacter (dt: number) {\n        this.updateFunction(dt);\n\n        if (!this.onGround) return;\n        if (this._stateX || this._stateZ) {\n            v3_0.set(this._stateX, 0, this._stateZ);\n            v3_0.normalize().negative();\n            this.rigidMove(v3_0, 1);\n        }\n    }\n\n    /**\n     * 清除移动速度\n     */\n    public clearVelocity () {\n        this._rigidBody.clearVelocity();\n    }\n\n    /**\n     * 刚体移动\n     *\n     * @param {Vec3} dir\n     * @param {number} speed\n     */\n    public rigidMove (dir: Vec3, speed: number) {\n        this._rigidBody.getLinearVelocity(v3_1);\n        Vec3.scaleAndAdd(v3_1, v3_1, dir, speed);\n\n        // console.log('v3_1' + v3_1);\n\n        const ms = this._curMaxSpeed;\n        const len = v3_1.lengthSqr();\n        let ratio = 1;\n        if (len > ms) {\n            if (Math.abs(this.node.eulerAngles.y - this._prevAngleY) >= 10) {\n                ratio = 2;\n            }\n            this._prevAngleY = this.node.eulerAngles.y;\n            v3_1.normalize();\n            v3_1.multiplyScalar(ms / ratio);\n        }\n        this._rigidBody.setLinearVelocity(v3_1);\n        // console.log('setLinearVelocity1' + v3_1);\n    }\n\n    /**\n     * 刷新\n     * @param dt \n     */\n    public updateFunction (dt: number) {\n        // this._updateContactInfo();\n        this._applyGravity();\n        this._applyDamping();\n        this._saveState();\n    }\n\n    /**\n     * 施加阻尼\n     *\n     * @private\n     * @param {number} [dt=1 / constant.GAME_FRAME]\n     */\n    private _applyDamping (dt = 1 / Constant.GAME_FRAME) {\n        this._rigidBody.getLinearVelocity(v3_1);\n        // console.log('getLinearVelocity2' + v3_1);\n        if (v3_1.lengthSqr() > EPSILON) {\n            v3_1.multiplyScalar(Math.pow(1.0 - this.damping, dt));\n            this._rigidBody.setLinearVelocity(v3_1);\n            // console.log('setLinearVelocity2' + v3_1);\n        }\n    }\n\n    /**\n     * 施加重力\n     *\n     * @private\n     */\n    private _applyGravity () {\n        const g = this.gravity;\n        const m = this._rigidBody.mass;\n        v3_1.set(0, m * g, 0);\n        this._rigidBody.applyForce(v3_1)\n    }\n\n    /**\n     * 获取线性速度\n     *\n     * @private\n     */\n    private _saveState () {\n        this._rigidBody.getLinearVelocity(this._velocity);\n        // console.log('getLinearVelocity3' + this._velocity  + \":\" + this._grounded);\n    }\n\n    update (dtS: number) {\n        const dt = 1000 / Constant.GAME_FRAME;\n        this._updateCharacter(dt);\n    }\n}"]}