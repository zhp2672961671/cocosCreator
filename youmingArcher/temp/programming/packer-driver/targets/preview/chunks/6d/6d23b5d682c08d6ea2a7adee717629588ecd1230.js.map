{"version":3,"sources":["file:///E:/myCocosGame/youmingArcher/assets/script/fight/test.ts"],"names":["_decorator","Component","Node","Vec3","ParticleSystemComponent","ccclass","property","Test","_arrOriPos","_arrArriveEnd","start","arrNdTarget","forEach","ndItem","push","worldPosition","clone","_resetAllPos","idx","setWorldPosition","arrParticle","getComponentsInChildren","item","simulationSpeed","clear","stop","play","update","deltaTime","length","pos","range","indexOf","translate","speed","NodeSpace","LOCAL"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,uB,OAAAA,uB;;;;;;;;;OACtC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U,GAC9B;;sBAEaO,I,WADZF,OAAO,CAAC,MAAD,C,UAQHC,QAAQ,CAAC,CAACJ,IAAD,CAAD,C,2BARb,MACaK,IADb,SAC0BN,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAUxBO,UAVwB,GAUJ,EAVI;AAAA,eAWxBC,aAXwB,GAWE,EAXF;AAAA;;AAahCC,QAAAA,KAAK,GAAI;AACL;AACA,eAAKF,UAAL,GAAkB,EAAlB;AACA,eAAKC,aAAL,GAAqB,EAArB;AAEA,eAAKE,WAAL,CAAiBC,OAAjB,CAA0BC,MAAD,IAAgB;AACrC,iBAAKL,UAAL,CAAgBM,IAAhB,CAAqBD,MAAM,CAACE,aAAP,CAAqBC,KAArB,EAArB;AACH,WAFD;AAGH;;AAEOC,QAAAA,YAAY,GAAI;AACpB,eAAKN,WAAL,CAAiBC,OAAjB,CAAyB,CAACC,MAAD,EAAeK,GAAf,KAA6B;AAClDL,YAAAA,MAAM,CAACM,gBAAP,CAAwB,KAAKX,UAAL,CAAgBU,GAAhB,CAAxB,EADkD,CAGlD;;AACA,gBAAIE,WAAuC,GAAEP,MAAM,CAACQ,uBAAP,CAA+BjB,uBAA/B,CAA7C;AACAgB,YAAAA,WAAW,CAACR,OAAZ,CAAqBU,IAAD,IAAiC;AACjDA,cAAAA,IAAI,CAACC,eAAL,GAAuB,CAAvB;AACAD,cAAAA,IAAI,QAAJ,YAAAA,IAAI,CAAEE,KAAN;AACAF,cAAAA,IAAI,QAAJ,YAAAA,IAAI,CAAEG,IAAN;AACAH,cAAAA,IAAI,QAAJ,YAAAA,IAAI,CAAEI,IAAN;AACH,aALD;AAMH,WAXD;AAaA,eAAKjB,aAAL,GAAqB,EAArB;AACH;;AAEDkB,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AACvB;AAEA,cAAI,KAAKjB,WAAL,CAAiBkB,MAArB,EAA6B;AACzB,iBAAK,IAAIX,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKP,WAAL,CAAiBkB,MAAzC,EAAiDX,GAAG,EAApD,EAAwD;AACpD,kBAAML,MAAM,GAAG,KAAKF,WAAL,CAAiBO,GAAjB,CAAf;AACA,kBAAIY,GAAG,GAAGjB,MAAM,CAACE,aAAP,CAAqBC,KAArB,EAAV;;AACA,kBAAIc,GAAG,CAACD,MAAJ,MAAgB,KAAKE,KAAzB,EAAgC;AAC5B,oBAAI,KAAKtB,aAAL,CAAmBuB,OAAnB,CAA2Bd,GAA3B,MAAoC,CAAC,CAAzC,EAA4C;AACxC,uBAAKT,aAAL,CAAmBK,IAAnB,CAAwBI,GAAxB;AACH;;AAED,oBAAI,KAAKT,aAAL,CAAmBoB,MAAnB,IAA6B,KAAKlB,WAAL,CAAiBkB,MAAlD,EAA0D;AACtD,uBAAKZ,YAAL;;AACA;AACH;AACJ,eATD,MASO;AACHJ,gBAAAA,MAAM,CAACoB,SAAP,CAAiB,IAAI9B,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAACyB,SAAD,GAAa,KAAKM,KAA/B,CAAjB,EAAwDhC,IAAI,CAACiC,SAAL,CAAeC,KAAvE;AACH;AACJ;AACJ;AACJ;;AA7D+B,O,wEAC/B9B,Q;;;;;iBACsB,E;;gFAEtBA,Q;;;;;iBACsB,E;;;;;;;iBAGM,E","sourcesContent":["\nimport { _decorator, Component, Node, Vec3, ParticleSystemComponent } from 'cc';\nconst { ccclass, property } = _decorator;\n//测试武器飞行脚本\n@ccclass('Test')\nexport class Test extends Component {\n    @property\n    public speed: number = 10;\n\n    @property\n    public range: number = 30;\n    \n    @property([Node])\n    public arrNdTarget: Node[] = [];\n\n    private _arrOriPos: any[] = [];\n    private _arrArriveEnd: number[] = [];\n\n    start () {\n        // [3]\n        this._arrOriPos = [];\n        this._arrArriveEnd = [];\n        \n        this.arrNdTarget.forEach((ndItem: Node)=>{\n            this._arrOriPos.push(ndItem.worldPosition.clone());\n        })\n    }\n\n    private _resetAllPos () {\n        this.arrNdTarget.forEach((ndItem: Node, idx: number)=>{\n            ndItem.setWorldPosition(this._arrOriPos[idx]);\n\n            //清除拖尾特效残留\n            let arrParticle:  ParticleSystemComponent[]= ndItem.getComponentsInChildren(ParticleSystemComponent);\n            arrParticle.forEach((item: ParticleSystemComponent)=>{\n                item.simulationSpeed = 1;\n                item?.clear();\n                item?.stop();\n                item?.play();\n            })\n        })\n\n        this._arrArriveEnd = [];\n    }\n\n    update (deltaTime: number) {\n        // [4]\n\n        if (this.arrNdTarget.length) {\n            for (let idx = 0; idx < this.arrNdTarget.length; idx++) {\n                const ndItem = this.arrNdTarget[idx];\n                let pos = ndItem.worldPosition.clone()\n                if (pos.length() >= this.range) {\n                    if (this._arrArriveEnd.indexOf(idx) === -1) {\n                        this._arrArriveEnd.push(idx);\n                    }\n\n                    if (this._arrArriveEnd.length >= this.arrNdTarget.length) {\n                        this._resetAllPos();\n                        break;\n                    }\n                } else {\n                    ndItem.translate(new Vec3(0,0,-deltaTime * this.speed), Node.NodeSpace.LOCAL);\n                }\n            }\n        }\n    }\n}\n"]}