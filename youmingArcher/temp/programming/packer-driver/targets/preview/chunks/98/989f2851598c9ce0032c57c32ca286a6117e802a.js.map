{"version":3,"sources":["file:///E:/myCocosGame/youmingArcher/assets/script/framework/csvManager.ts"],"names":["_decorator","ccclass","property","CELL_DELIMITERS","LINE_DELIMITERS","getter","index","getterCast","value","cast","d","Array","Number","isNaN","CSV","STANDARD_DECODE_OPTS","skip","limit","header","comment","STANDARD_ENCODE_OPTS","delimiter","newline","quoteMark","doubleQuoteMark","quoteRegex","assign","console","log","arguments","args","prototype","slice","call","base","rest","i","len","length","attr","map","collection","fn","results","getType","obj","Object","toString","getLimit","buildObjectConstructor","fields","sample","object","setter","forEach","idx","buildArrayConstructor","row","frequency","coll","needle","count","lastIndex","maxIndex","indexOf","mostFrequent","needles","max","detected","cur","unsafeParse","text","opts","lines","split","splice","constructor","cells","line","shift","findIndex","list","item","quoteCount","start","end","key","hasOwnProperty","numKey","parseInt","substring","push","safeParse","encodeCells","replace","join","encodeArrays","lim","encodeObjects","key$1","parse","rows","bind","Math","min","floor","encode","CSVManager","_csvTables","_csvTableForArr","_tableCast","_tableComment","instance","_instance","addTable","tableName","tableContent","force","tableData","tableArr","keyName","getTableArr","getTable","queryOne","table","tbItem","queryByID","ID","queryAll","ret","queryIn","values","keys","queryByCondition","condition","tableKeys","tableKeysLength","keysLength","fit","j","queryOneByCondition"],"mappings":"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","sourcesContent":["import { _decorator } from \"cc\";\n\nconst { ccclass, property } = _decorator;\n\nvar CELL_DELIMITERS = [\",\", \";\", \"\\t\", \"|\", \"^\"];\nvar LINE_DELIMITERS = [\"\\r\\n\", \"\\r\", \"\\n\"];\n\nvar getter = function (index: any) {\n    return (\"d[\" + index + \"]\");\n};\n\nvar getterCast = function(value: any, index: any, cast: any, d: any) {\n\n    if (cast instanceof Array) {\n        if (cast[index] === \"number\") {\n            return Number(d[index]);\n        } else if (cast[index] === \"boolean\") {\n            return d[index] === \"true\" ||  d[index] === \"t\" || d[index] === \"1\";\n        } else {\n            return d[index];\n        }\n    } else {\n        if (!isNaN(Number(value))) {\n            return Number(d[index]);\n        } else if (value == \"false\" || value == \"true\" || value == \"t\" || value == \"f\") {\n            return d[index] === \"true\" ||  d[index] === \"t\" || d[index] === \"1\";\n        } else {\n            return d[index];\n        }\n    }\n};\n\nvar CSV = {\n    //\n\n    /* =========================================\n        * Constants ===============================\n        * ========================================= */\n\n    STANDARD_DECODE_OPTS: {\n        skip: 0,\n        limit: false,\n        header: false,\n        cast: false,\n        comment: \"\"\n    },\n\n    STANDARD_ENCODE_OPTS: {\n        delimiter: CELL_DELIMITERS[0],\n        newline: LINE_DELIMITERS[0],\n        skip: 0,\n        limit: false,\n        header: false\n    },\n\n    quoteMark: '\"',\n    doubleQuoteMark: '\"\"',\n    quoteRegex: /\"/g,\n\n    /* =========================================\n        * Utility Functions =======================\n        * ========================================= */\n    assign: function () {\n        console.log(\"arguments======================\",arguments,arguments[0],arguments[1],arguments[2])\n        var args = Array.prototype.slice.call(arguments);\n        console.log('args==========',args)\n        var base = args[0];\n        var rest = args.slice(1);\n        console.log(\"base=============\",base,\"rest=================\",rest)\n        for (var i = 0, len = rest.length; i < len; i++) {\n            for (var attr in rest[i]) {\n                base[attr] = rest[i][attr];\n            }\n        }\n\n        return base;\n    },\n\n    map: function (collection: any, fn: Function) {\n        var results = [];\n        for (var i = 0, len = collection.length; i < len; i++) {\n            results[i] = fn(collection[i], i);\n        }\n\n        return results;\n    },\n\n    getType: function (obj: any) {\n        return Object.prototype.toString.call(obj).slice(8, -1);\n    },\n\n    getLimit: function (limit: any, len: any) {\n        return limit === false ? len : limit;\n    },\n\n    buildObjectConstructor: function(fields: any, sample: any, cast: any) {\n        return function(d: any) {\n            var object: any = new Object();\n            var setter = function(attr: any, value: any) {\n                return object[attr] = value;\n            };\n            if (cast) {\n                fields.forEach(function(attr: any, idx: number) {\n                    setter(attr, getterCast(sample[idx], idx, cast, d));\n                });\n            } else {\n                fields.forEach(function(attr: any, idx: number) {\n                    setter(attr, getterCast(sample[idx], idx, null, d));\n                });\n            }\n            // body.push(\"return object;\");\n            // body.join(\";\\n\");\n            return object;\n        };\n    },\n\n    buildArrayConstructor: function(fields: any, sample: any, cast: any) {\n        return function(d: any) {\n            var row = new Array(sample.length);\n            var setter = function(idx: any, value: any) {\n                return row[idx] = value;\n            };\n            if (cast) {\n                fields.forEach(function(attr: any, idx: number) {\n                    setter(attr, getterCast(sample[idx], idx, cast, d));\n                });\n            } else {\n                fields.forEach(function(attr: any, idx: number) {\n                    setter(attr, getterCast(sample[idx], idx, null, d));\n                });\n            }\n            return row;\n        };\n    },\n\n    frequency: function (coll: any, needle: any, limit: any) {\n        if (limit === void 0) limit = false;\n\n        var count = 0;\n        var lastIndex = 0;\n        var maxIndex = this.getLimit(limit, coll.length);\n\n        while (lastIndex < maxIndex) {\n            lastIndex = coll.indexOf(needle, lastIndex);\n            if (lastIndex === -1) break;\n            lastIndex += 1;\n            count++;\n        }\n\n        return count;\n    },\n\n    mostFrequent: function (coll: any, needles: any, limit: any) {\n        var max = 0;\n        var detected;\n\n        for (var cur = needles.length - 1; cur >= 0; cur--) {\n            if (this.frequency(coll, needles[cur], limit) > max) {\n                detected = needles[cur];\n            }\n        }\n\n        return detected || needles[0];\n    },\n\n    unsafeParse: function (text: any, opts: any, fn: any) {\n        var lines = text.split(opts.newline);\n\n        if (opts.skip > 0) {\n            lines.splice(opts.skip);\n        }\n\n        var fields;\n        var constructor;\n\n        function cells(lines: any) {\n            var line = lines.shift();\n            if (line.indexOf('\"') >= 0) {// 含引号\n\n                // 找到这行完整的数据, 找到对称的双引号\n                var lastIndex = 0;\n                var findIndex = 0;\n                var count = 0;\n                while (lines.length > 0) {\n                    lastIndex = line.indexOf('\"', findIndex);\n                    if (lastIndex === -1 && count % 2 === 0) break;\n\n                    if (lastIndex !== -1) {\n                        findIndex = lastIndex + 1;\n                        count++;\n                    } else {\n                        line = line + opts.newline + lines.shift();\n                    }\n                }\n\n                var list = [];\n                var item;\n\n                var quoteCount = 0;\n\n                var start = 0;\n                var end = 0;\n                var length = line.length;\n                for (var key in line) {\n                    if (!line.hasOwnProperty(key)) {\n                        continue;\n                    }\n\n                    let numKey = parseInt(key);\n                    var value = line[key];\n\n                    if (numKey === 0 && value === '\"') {\n                        quoteCount++;\n                        start = 1;\n                    }\n\n                    if (value === '\"') {\n                        quoteCount++;\n\n                        if (line[numKey - 1] === opts.delimiter && start === numKey) {\n                            start++;\n                        }\n                    }\n\n                    if (value === '\"' && quoteCount % 2 === 0) {\n\n                        if (line[numKey + 1] === opts.delimiter || numKey + 1 === length) {\n                            end = numKey;\n                            item = line.substring(start, end);\n                            list.push(item);\n                            start = end + 2;\n                            end = start;\n                        }\n\n                    }\n\n                    if (value === opts.delimiter && quoteCount % 2 === 0) {\n                        end = numKey;\n                        if (end > start) {\n                            item = line.substring(start, end);\n                            list.push(item);\n                            start = end + 1;\n                            end = start;\n                        } else if (end === start) {\n                            list.push(\"\");\n                            start = end + 1;\n                            end = start;\n                        }\n                    }\n\n                }\n\n                end = length;\n\n                if (end >= start) {\n                    item = line.substring(start, end);\n                    list.push(item);\n                }\n\n                return list;\n            } else {\n                return line.split(opts.delimiter);\n            }\n        }\n\n        if (opts.header) {\n            if (opts.header === true) {\n                opts.comment = cells(lines); // 第一行是注释\n                opts.cast = cells(lines); // 第二行是数据类型\n                fields = cells(lines);\n            } else if (this.getType(opts.header) === \"Array\") {\n                fields = opts.header;\n            }\n\n            constructor = this.buildObjectConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\n        } else {\n            constructor = this.buildArrayConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\n        }\n\n        while (lines.length > 0) {\n            var row = cells(lines);\n            if (row.length > 1) {\n                fn(constructor(row), fields[0]);\n            }\n        }\n\n        return true;\n    },\n\n    safeParse: function (text: any, opts: any, fn: Function) {\n        var delimiter = opts.delimiter;\n        var newline = opts.newline;\n\n        var lines = text.split(newline);\n        if (opts.skip > 0) {\n            lines.splice(opts.skip);\n        }\n\n        return true;\n    },\n\n    encodeCells: function (line: any, delimiter: any, newline: any) {\n        var row = line.slice(0);\n        for (var i = 0, len = row.length; i < len; i++) {\n            if (row[i].indexOf(this.quoteMark) !== -1) {\n                row[i] = row[i].replace(this.quoteRegex, this.doubleQuoteMark);\n            }\n\n            if (row[i].indexOf(delimiter) !== -1 || row[i].indexOf(newline) !== -1) {\n                row[i] = this.quoteMark + row[i] + this.quoteMark;\n            }\n        }\n\n        return row.join(delimiter);\n    },\n\n    encodeArrays: function(coll: any, opts: any, fn: Function) {\n        var delimiter = opts.delimiter;\n        var newline = opts.newline;\n\n        if (opts.header && this.getType(opts.header) === \"Array\") {\n            fn(this.encodeCells(opts.header, delimiter, newline));\n        }\n\n        for (var cur = 0, lim = this.getLimit(opts.limit, coll.length); cur < lim; cur++) {\n            fn(this.encodeCells(coll[cur], delimiter, newline));\n        }\n\n        return true;\n    },\n\n    encodeObjects: function (coll: any, opts: any, fn:Function) {\n        var delimiter = opts.delimiter;\n        var newline = opts.newline;\n        var header;\n        var row;\n\n        header = [];\n        row = [];\n        for (var key in coll[0]) {\n            header.push(key);\n            row.push(coll[0][key]);\n        }\n\n        if (opts.header === true) {\n            fn(this.encodeCells(header, delimiter, newline));\n        } else if (this.getType(opts.header) === \"Array\") {\n            fn(this.encodeCells(opts.header, delimiter, newline));\n        }\n\n        //@ts-ignore\n        fn(this.encodeCells(row, delimiter));\n\n        for (var cur = 1, lim = this.getLimit(opts.limit, coll.length); cur < lim; cur++) {\n            row = [];\n            for (var key$1 = 0, len = header.length; key$1 < len; key$1++) {\n                row.push(coll[cur][header[key$1]]);\n            }\n\n            fn(this.encodeCells(row, delimiter, newline));\n        }\n\n        return true;\n    },\n\n    parse: function (text: any, opts: any, fn: Function) {\n        var rows: any;\n\n        if (this.getType(opts) === \"Function\") {\n            fn = opts;\n            opts = {};\n        } else if (this.getType(fn) !== \"Function\") {\n            rows = [];\n            fn = rows.push.bind(rows);\n        } else {\n            rows = [];\n        }\n        console.log(\"parse=============\",{})\n        //  //@ts-ignore忽略设置\n        //@ts-ignore\n        opts = this.assign({\"aaaa\":1}, this.STANDARD_DECODE_OPTS, opts);\n        //@ts-ignore\n        this.opts = opts;\n\n        if (!opts.delimiter || !opts.newline) {\n            var limit = Math.min(48, Math.floor(text.length / 20), text.length);\n            opts.delimiter = opts.delimiter || this.mostFrequent(text, CELL_DELIMITERS, limit);\n            opts.newline = opts.newline || this.mostFrequent(text, LINE_DELIMITERS, limit);\n        }\n\n        // modify by jl 由表自行控制不要含有双引号.提高解析效率\n        return this.unsafeParse(text, opts, fn) &&\n            (rows.length > 0 ? rows : true);\n    },\n\n    encode: function (coll: any, opts: any, fn: Function) {\n        var lines: any;\n\n        if (this.getType(opts) === \"Function\") {\n            fn = opts;\n            opts = {};\n        } else if (this.getType(fn) !== \"Function\") {\n            lines = [];\n            fn = lines.push.bind(lines);\n        }\n\n        //@ts-ignore\n        opts = this.assign({}, this.STANDARD_ENCODE_OPTS, opts);\n\n        if (opts.skip > 0) {\n            coll = coll.slice(opts.skip);\n        }\n\n        return (this.getType(coll[0]) === \"Array\" ? this.encodeArrays : this.encodeObjects)(coll, opts, fn) &&\n            (lines.length > 0 ? lines.join(opts.newline) : true);\n    }\n};\n\n@ccclass(\"CSVManager\")\nexport class CSVManager {\n    /* class member could be defined like this */\n\n    static _instance: CSVManager;\n\n    static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new CSVManager();\n        return this._instance;\n    }\n    private _csvTables:any = {};\n    private _csvTableForArr:any = {};\n    private _tableCast:any = {};\n    private _tableComment:any = {};\n\n    addTable (tableName:string, tableContent:string, force?:boolean) {\n        if (this._csvTables[tableName] && !force) {\n            return;\n        }\n\n        let tableData: any = {};\n        let tableArr: any[] = [];\n        let opts = { header: true };\n        CSV.parse(tableContent, opts, function (row: any, keyName: string) {\n            tableData[row[keyName]] = row;\n            tableArr.push(row);\n        });\n\n        this._tableCast[tableName] = (CSV as any).opts.cast;\n        this._tableComment[tableName] = (CSV as any).opts.comment;\n\n        this._csvTables[tableName] = tableData;\n        this._csvTableForArr[tableName] = tableArr;\n\n        //this.csvTables[tableName].initFromText(tableContent);\n    }\n\n        /**\n     * 根据表名获取表的所有内容\n     * @param {string} tableName  表名\n     * @returns {object} 表内容\n     */\n    getTableArr (tableName:string) {\n        return this._csvTableForArr[tableName];\n    }\n\n    /**\n     * 根据表名获取表的所有内容\n     * @param {string} tableName  表名\n     * @returns {object} 表内容\n     */\n    getTable (tableName:string) {\n        return this._csvTables[tableName];\n    }\n\n    /**\n     * 查询一条表内容\n     * @param {string} tableName 表名\n     * @param {string} key 列名\n     * @param {any} value 值\n     * @returns {Object} 一条表内容\n     */\n    queryOne (tableName:string, key:string, value:any) {\n        var table = this.getTable(tableName);\n        if (!table) {\n            return null;\n        }\n\n        if (key) {\n            for (var tbItem in table) {\n                if (!table.hasOwnProperty(tbItem)) {\n                    continue;\n                }\n\n                if (table[tbItem][key] === value) {\n                    return table[tbItem];\n                }\n            }\n        } else {\n            return table[value];\n        }\n    }\n\n    /**\n     * 根据ID查询一条表内容\n     * @param {string}tableName 表名\n     * @param {string}ID\n     * @returns {Object} 一条表内容\n     */\n    queryByID (tableName:string, ID:string) {\n        //@ts-ignore\n        return this.queryOne(tableName, null, ID);\n    }\n\n    /**\n     * 查询key和value对应的所有行内容\n     * @param {string} tableName 表名\n     * @param {string} key 列名\n     * @param {any} value 值\n     * @returns {Object}\n     */\n    queryAll (tableName:string, key:string, value:any) {\n        var table = this.getTable(tableName);\n        if (!table || !key) {\n            return null;\n        }\n\n        var ret: any = {};\n        for (var tbItem in table) {\n            if (!table.hasOwnProperty(tbItem)) {\n                continue;\n            }\n\n            if (table[tbItem][key] === value) {\n                ret[tbItem] = table[tbItem];\n            }\n        }\n\n        return ret;\n    }\n\n    /**\n     * 选出指定表里所有 key 的值在 values 数组中的数据，返回 Object，key 为 ID\n     * @param {string} tableName 表名\n     * @param {string} key  列名\n     * @param {Array}values 数值\n     * @returns\n     */\n    queryIn (tableName:string, key:string, values:Array<any>) {\n        var table = this.getTable(tableName);\n        if (!table || !key) {\n            return null;\n        }\n\n        var ret: any = {};\n        var keys = Object.keys(table);\n        var length = keys.length;\n        for (var i = 0; i < length; i++) {\n            var item = table[keys[i]];\n            if (values.indexOf(item[key]) > -1) {\n                ret[keys[i]] = item;\n            }\n        }\n\n        return ret;\n    }\n\n    /**\n     * 选出符合条件的数据。condition key 为表格的key，value 为值的数组。返回的object，key 为数据在表格的ID，value为具体数据\n     * @param {string} tableName 表名\n     * @param {any} condition 筛选条件\n     * @returns\n     */\n    queryByCondition (tableName:string, condition: any) {\n        if (condition.constructor !== Object) {\n            return null;\n        }\n\n        var table = this.getTable(tableName);\n        if (!table) {\n            return null;\n        }\n\n        var ret: any = {};\n        var tableKeys = Object.keys(table);\n        var tableKeysLength = tableKeys.length;\n        var keys = Object.keys(condition);\n        var keysLength = keys.length;\n        for (var i = 0; i < tableKeysLength; i++) {\n            var item = table[tableKeys[i]];\n            var fit = true;\n            for (var j = 0; j < keysLength; j++) {\n                var key = keys[j];\n                fit = fit && (condition[key] === item[key]) && !ret[tableKeys[i]];\n            }\n\n            if (fit) {\n                ret[tableKeys[i]] = item;\n            }\n        }\n\n        return ret;\n    }\n\n    queryOneByCondition (tableName:string, condition: any) {\n        if (condition.constructor !== Object) {\n            return null;\n        }\n\n        var table = this.getTable(tableName);\n        if (!table) {\n            return null;\n        }\n\n        var keys = Object.keys(condition);\n        var keysLength = keys.length;\n\n        for (let keyName in table) {\n            var item = table[keyName];\n\n            var fit = true;\n            for (var j = 0; j < keysLength; j++) {\n                var key = keys[j];\n                fit = fit && (condition[key] === item[key]);\n            }\n\n            if (fit) {\n                return item;\n            }\n        }\n\n        return null;\n    }\n}\n"]}