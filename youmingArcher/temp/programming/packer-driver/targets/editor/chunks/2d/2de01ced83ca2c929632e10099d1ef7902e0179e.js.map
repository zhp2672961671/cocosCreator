{"version":3,"sources":["file:///E:/myCocosGame/youmingArcher/assets/script/fight/monsterModel.ts"],"names":["_decorator","Component","SkeletalAnimationComponent","AnimationClip","Constant","GameManager","ccclass","property","MonsterModel","isAniPlaying","scriptMonster","_aniType","_aniState","isRunning","MONSTER_ANI_TYPE","RUN","isIdle","IDLE","isAttacking","ATTACK","ATTACK_1","ATTACK_2","isHitting","HIT","start","onFrameAttack","isNormalAttack","isGameOver","isGamePause","releaseSkillToPlayer","playAni","aniType","isLoop","callback","pos","aniComPlayer","play","getState","wrapMode","WrapMode","Loop","Normal","speed","gameSpeed","attackSpeedAddition","curAttackSpeed","curMoveSpeed","moveSpeedAddition","baseInfo","moveSpeed","once","EventType","FINISHED"],"mappings":"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","sourcesContent":["import { _decorator, Component, SkeletalAnimationComponent, SkeletalAnimationState, AnimationClip } from 'cc';\nimport { Constant } from '../framework/constant';\nimport { GameManager } from './gameManager';\nimport { Monster } from './monster';\nconst { ccclass, property } = _decorator;\n//怪物动画脚本\n@ccclass('MonsterModel')\nexport class MonsterModel extends Component {\n    @property(SkeletalAnimationComponent)\n    public aniComPlayer: SkeletalAnimationComponent = null!;//动画播放组件\n\n    public isAniPlaying: Boolean = false;//当前动画是否正在播放\n    public scriptMonster: Monster = null!;\n\n    private _aniType: string = \"\";//动画类型\n    private _aniState: SkeletalAnimationState = null!;//动画播放状态\n\n    //是否正在跑\n    public get isRunning () {\n        return this._aniType === Constant.MONSTER_ANI_TYPE.RUN && this.isAniPlaying;\n    }\n\n    //是否站立\n    public get isIdle () {\n        return this._aniType === Constant.MONSTER_ANI_TYPE.IDLE && this.isAniPlaying;\n    }\n\n    //是否正在攻击\n    public get isAttacking () {\n        return (this._aniType === Constant.MONSTER_ANI_TYPE.ATTACK  && this.isAniPlaying)\n            || (this._aniType === Constant.MONSTER_ANI_TYPE.ATTACK_1 && this.isAniPlaying)\n            || (this._aniType === Constant.MONSTER_ANI_TYPE.ATTACK_2  && this.isAniPlaying);\n    } \n\n    //是否正在受到攻击\n    public get isHitting () {\n        return this._aniType === Constant.MONSTER_ANI_TYPE.HIT && this.isAniPlaying;;\n    } \n\n    start () {\n        // [3]\n    }\n\n    /**\n     * attack动画帧事件\n     * @returns \n     */\n    onFrameAttack (isNormalAttack: boolean = true) {\n        if (GameManager.isGameOver || GameManager.isGamePause) {\n            return;\n        }\n\n        this.scriptMonster.releaseSkillToPlayer(isNormalAttack);\n    }\n\n    /**\n     * 播放小怪动画\n     *\n     * @param {string} aniType 动画类型\n     * @param {boolean} [isLoop=false] 是否循环\n     * @param {Function} [callback] 回调函数\n     * @param {number} [pos] 调用播放动画的位置，方便用于测试\n     * @returns\n     * @memberof Player\n     */\n     public playAni (aniType: string, isLoop: boolean = false, callback?: Function, pos?: number) {\n        // console.log(\"monsterAniType\", aniType, \"curAni\", this._aniType, \"pos\", pos);\n\n        this._aniType = aniType;\n        this.aniComPlayer?.play(aniType);\n        this.isAniPlaying = true;\n\n        this._aniState = this.aniComPlayer?.getState(aniType) as SkeletalAnimationState;\n\n        if (this._aniState) {\n            if (isLoop) {\n                this._aniState.wrapMode = AnimationClip.WrapMode.Loop;    \n            } else {\n                this._aniState.wrapMode = AnimationClip.WrapMode.Normal;    \n            }\n\n            switch (aniType) {\n                case Constant.MONSTER_ANI_TYPE.ATTACK:\n                    this._aniState.speed = GameManager.gameSpeed * GameManager.attackSpeedAddition * this.scriptMonster.curAttackSpeed;\n                    break;\n                case Constant.MONSTER_ANI_TYPE.ATTACK_1:\n                    this._aniState.speed = GameManager.gameSpeed * GameManager.attackSpeedAddition * this.scriptMonster.curAttackSpeed;\n                    break;\n                case Constant.MONSTER_ANI_TYPE.ATTACK_2:\n                    this._aniState.speed = GameManager.gameSpeed * GameManager.attackSpeedAddition * this.scriptMonster.curAttackSpeed;\n                    break;\n                case Constant.MONSTER_ANI_TYPE.RUN:\n                    this._aniState.speed = GameManager.gameSpeed * (this.scriptMonster.curMoveSpeed * GameManager.moveSpeedAddition / this.scriptMonster.baseInfo.moveSpeed);\n                    break;\n                case Constant.MONSTER_ANI_TYPE.IDLE:\n                    this._aniState.speed = GameManager.gameSpeed;\n                    break;\n                default:\n                    this._aniState.speed = GameManager.gameSpeed;\n                    break;\n            }\n        }\n\n        if (!isLoop) {\n            this.aniComPlayer.once(SkeletalAnimationComponent.EventType.FINISHED, ()=>{\n                this.isAniPlaying = false;\n                callback && callback();\n            })\n        }\n    }\n\n}"]}