{"version":3,"sources":["file:///E:/myCocosGame/youmingArcher/assets/script/ui/fight/monsterBloodBar.ts"],"names":["_decorator","Component","UITransformComponent","tween","clamp","Vec3","find","Constant","GameManager","PoolManager","ccclass","property","MonsterBloodBar","_whiteBarHeight","_redBarHeight","_totalBlood","_curBlood","_scriptParent","_maxWhiteBarWidth","_maxRedBarWidth","_ndTarget","_offsetPos","_curPos","_isBloodEmpty","_prevBloodPos","start","show","scriptParent","totalBlood","offsetPos","scale","callback","isInit","hpAddition","node","set","worldPosition","ratio","UIComWhiteBar","setContentSize","UIComRedBar","setSiblingIndex","PRIORITY","BLOOD","refreshBlood","num","to","width","call","instance","putNode","isDie","update","parent","active","worPos","mainCamera","convertToUINode","add","setPosition"],"mappings":"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","sourcesContent":["import { Constant } from './../../framework/constant';\nimport { _decorator, Component, UITransformComponent, tween, clamp, Vec3, Node, find } from 'cc';\nimport { GameManager } from '../../fight/gameManager';\nimport { PoolManager } from '../../framework/poolManager';\nconst { ccclass, property } = _decorator;\n//怪物血量脚本\n@ccclass('MonsterBloodBar')\nexport class MonsterBloodBar extends Component {\n    @property(UITransformComponent)\n    public UIComWhiteBar: UITransformComponent = null!;//白色进度条的UI组件\n\n    @property(UITransformComponent)\n    public UIComRedBar: UITransformComponent = null!;//血量进度条的UI组件\n\n    @property(UITransformComponent)\n    public UIComBloodBar: UITransformComponent = null!;//血量容器的UI组件\n\n    private _whiteBarHeight: number = 19;//白色进度条高度\n    private _redBarHeight: number = 19;//血量进度条高度\n    private _totalBlood: number = 0;//总的血量\n    private _curBlood: number = 0;//当前血量值\n    private _scriptParent: any = null!;//血条所在节点绑定的脚本\n    private _maxWhiteBarWidth: number = 104;//当前小怪血条中白色进度条长度\n    private _maxRedBarWidth: number = 104;//当前小怪血条中血量条长度\n    private _ndTarget: Node = null!;//跟随目标\n    private _offsetPos: Vec3 = null!;//偏差\n    private _curPos: Vec3 = new Vec3()!;//当前血条位置\n    private _isBloodEmpty: boolean = false;//血条是否为空\n    private _prevBloodPos: Vec3 = new Vec3();//血量为空前的血条位置\n\n    start () {\n        // [3]\n    }\n\n/**\n * 展示血条\n *\n * @param {*} scriptParent \n * @param {number} totalBlood\n * @param {Vec3} offsetPos\n * @param {Vec3} scale\n * @param {(Function | null)} [callback]\n * @param {boolean} [isInit=true]\n * @memberof MonsterBloodBar\n */\npublic show (scriptParent: any, totalBlood: number, offsetPos: Vec3, scale: Vec3, callback?: Function | null, isInit: boolean = true) {\n        this._scriptParent = scriptParent;\n        this._totalBlood = totalBlood * GameManager.hpAddition;\n        this._offsetPos = offsetPos;\n        this._ndTarget = scriptParent.node;\n        this._isBloodEmpty = false;\n\n        this._prevBloodPos.set(this._ndTarget.worldPosition);\n\n        if (isInit) {\n            this._curBlood = this._totalBlood;\n        }\n\n        //当前血量占全部的比例\n        let ratio = this._curBlood / this._totalBlood;\n        ratio = clamp(ratio, 0, 1);\n\n        //进度条宽度设置\n        this.UIComWhiteBar.setContentSize(ratio * this._maxWhiteBarWidth, this._whiteBarHeight);\n        this.UIComRedBar.setContentSize(ratio * this._maxRedBarWidth, this._redBarHeight);\n\n        // this.UIComBloodBar.priority = constant.PRIORITY.BLOOD;\n        this.node.setSiblingIndex(Constant.PRIORITY.BLOOD);\n\n        callback && callback();\n    }\n\n    /**\n     * 刷新血量\n     *\n     * @param {number} num 血量值\n     * @memberof MonsterBloodBar\n     */\n    public refreshBlood (num: number) {\n        this._curBlood += num;\n\n        let ratio = this._curBlood / this._totalBlood;\n\n        if (num < 0) {//减血\n            ratio = ratio <= 0 ? 0 : ratio;\n    \n            this.UIComRedBar.setContentSize(this._maxRedBarWidth * ratio, this._redBarHeight);\n\n            if (!this._isBloodEmpty) {\n                this._isBloodEmpty = ratio <= 0;\n\n                tween(this.UIComWhiteBar)\n                .to(0.7, {width: this._maxWhiteBarWidth * ratio})\n                .call(()=>{\n                    if (this._isBloodEmpty) {\n                        PoolManager.instance.putNode(this.node);\n                    }\n                })\n                .start();\n\n                if (this._isBloodEmpty) {\n                    this._scriptParent.isDie = true;\n                }\n            } else {\n                PoolManager.instance.putNode(this.node);\n                this._scriptParent.isDie = true;\n            }\n        } \n    }\n\n    update () {\n        if (this.node.parent && this.node.active && this._ndTarget && this._ndTarget.parent) {\n            let worPos = this._ndTarget.worldPosition;\n            if (this._isBloodEmpty) {\n                worPos = this._prevBloodPos;\n            } else {\n                this._prevBloodPos.set(worPos);\n            }\n\n            GameManager.mainCamera?.convertToUINode(worPos, find(\"Canvas\") as Node, this._curPos);\n            this._curPos.add(this._offsetPos);\n            this.node.setPosition(this._curPos);\n        }\n    }\n}\n"]}