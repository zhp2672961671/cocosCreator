{"version":3,"sources":["file:///E:/myCocosGame/youmingArcher/assets/script/ui/fight/playerBloodBar.ts"],"names":["_decorator","Component","Node","SpriteFrame","Prefab","LayoutComponent","Vec3","find","UITransformComponent","SpriteComponent","tween","clamp","Constant","GameManager","PoolManager","ccclass","property","PlayerBloodBar","curBlood","_minBloodBarWidth","_bloodBarWidth","_minBloodBarItemWidth","_maxItemBlood","_totalBlood","_ndTarget","_offsetPos","_curPos","_scriptParent","_scale","_bloodBarHeight","_oriContainerPos","_curContainerPos","_bloodBarPos","_whiteBarPos","start","show","scriptParent","totalBlood","offsetPos","scale","callback","node","setScale","bloodItemNum","Math","ceil","isOutOfRange","set","ndContainer","position","y","setPosition","layoutContainer","spacingX","children","forEach","item","active","ratio","UIComBloodBar","setContentSize","setSiblingIndex","PRIORITY","ZERO","i","ndLineItem","length","instance","getNode","pbLine","UICom","getComponent","layCom","updateLayout","spComLine","x","enabled","UIComWhiteBar","z","ndWhiteBar","UIComCurBloodBar","ndCurBloodBar","refreshBlood","num","isIncreaseLimit","ndChild","to","width","call","isDie","update","deltaTime","parent","mainCamera","convertToUINode","worldPosition","add"],"mappings":"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","sourcesContent":["import { Constant } from './../../framework/constant';\nimport { GameManager } from './../../fight/gameManager';\nimport { _decorator, Component, Node, SpriteFrame, Prefab, LayoutComponent, Vec3, find, UITransformComponent, SpriteComponent, tween, clamp } from 'cc';\nimport { PoolManager } from '../../framework/poolManager';\n//玩家血条脚本\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerBloodBar')\nexport class PlayerBloodBar extends Component {\n\n    @property\n    public lineWidth: number = 1;//中间线的宽度\n\n    @property(Prefab)\n    public pbLine: Prefab = null!//中间线预制体\n\n    @property(Node)\n    public ndContainer: Node = null!;//血块容器\n\n    @property(LayoutComponent)\n    public layoutContainer: LayoutComponent = null!;//container节点的layout组件\n\n    @property(UITransformComponent)\n    public UIComWhiteBar: UITransformComponent = null!;//白色进度条的UI组件\n\n    @property(Node)\n    public ndWhiteBar: Node = null!;//白色进度条节点\n\n    @property(UITransformComponent)\n    public UIComCurBloodBar: UITransformComponent = null!;//血量进度条的UI组件\n\n    @property(Node)\n    public ndCurBloodBar: Node = null!;//血量进度条节点\n\n    @property(SpriteComponent)\n    public spComBloodBar: SpriteComponent = null!;//血条背景色\n\n    @property(SpriteFrame)\n    public sfRed: SpriteFrame = null!//小怪和bos是红色背景\n\n    @property(SpriteFrame)\n    public sfGreen: SpriteFrame = null!//玩家是绿色背景\n\n    @property(UITransformComponent)\n    public UIComBloodBar: UITransformComponent = null!;//血条容器节点\n\n    public curBlood: number = 0;//当前血量值\n\n    private _minBloodBarWidth: number = 100;//最小整体血条宽度\n    private _bloodBarWidth: number = 0;//当前整体血条宽度\n    private _minBloodBarItemWidth: number = 10;//最小单个血块宽度\n    private _maxItemBlood: number = 200;//每隔血条\n    private _totalBlood: number = 0;//总的血量\n    private _ndTarget: Node = null!;//跟随目标\n    private _offsetPos: Vec3 = null!;//偏差\n    private _curPos: Vec3 = new Vec3()!;//当前血条位置\n    private _scriptParent: any = null!;//血条所在节点绑定的脚本\n    private _scale: Vec3 = new Vec3();//血条缩放倍数\n    private _bloodBarHeight: number = 15;//血条高度\n    private _oriContainerPos: Vec3 = new Vec3();//初始线条容器节点位置\n    private _curContainerPos: Vec3 = new Vec3();//当前线条容器节点位置\n    private _bloodBarPos = new Vec3();//血条位置\n    private _whiteBarPos = new Vec3();//白条位置\n\n    start () {\n        // [3]\n    }\n\n    /**\n     * 展示血条\n     *\n     * @param {*} scriptParent 血条使用者绑定的节点，如玩家或者小怪\n     * @param {number} totalBlood 总血量\n     * @param {number} bloodBarType 血条类型\n     * @param {Vec3} offsetPos 血条位置偏差\n     * @param {Vec3} scale 血条缩放大小\n     * @param {(Function | null)} [callback] \n     * @memberof BloodBar\n     */\n    public show (scriptParent: any, totalBlood: number, curBlood: number, offsetPos: Vec3, scale: Vec3, callback?: Function | null) {\n        this._scriptParent = scriptParent!;\n        this._totalBlood = totalBlood;\n        this._offsetPos = offsetPos;\n        this._scale = scale;\n        this._ndTarget = scriptParent.node;\n\n        this.node.setScale(scale);\n\n        // if (isInit) {\n            // this._curBlood = this._totalBlood;\n        // }\n\n        this.curBlood = curBlood;\n\n        //血块数量\n        let bloodItemNum = Math.ceil(totalBlood / this._maxItemBlood);\n        //当前血量条最小长度\n        this._bloodBarWidth = this._minBloodBarItemWidth * bloodItemNum;\n        //所需血条总宽度大于最小整体血条宽度，需增大血条大小，反之使用最小血条宽度\n        let isOutOfRange = this._bloodBarWidth > this._minBloodBarWidth;\n\n        this._oriContainerPos.set(this.ndContainer.position);\n\n        if (isOutOfRange) {\n            this._curContainerPos.set(-this._bloodBarWidth * 0.5, this._oriContainerPos.y, 0);\n            this.ndContainer.setPosition(this._curContainerPos);\n        } else {\n            this._bloodBarWidth = this._minBloodBarWidth;\n        }\n\n        //每个间隔线之间的距离，1为它本身的宽度，默认前后不显示\n        this.layoutContainer.spacingX = this._bloodBarWidth / bloodItemNum - 1;\n\n        this.ndContainer.children.forEach((item: any)=>{\n            item.active = false;\n        })\n\n        //当前血量占全部的比例\n        let ratio = this.curBlood / this._totalBlood;\n        ratio = clamp(ratio, 0, 1);\n\n        //设置整体大小\n        this.UIComBloodBar.setContentSize(this._bloodBarWidth + 2, this._bloodBarHeight);\n        // this.UIComBloodBar.priority = constant.PRIORITY.BLOOD;\n        this.node.setSiblingIndex(Constant.PRIORITY.ZERO);\n\n        //根据当前血量刷新中间连接线\n        for (let i = 0; i < bloodItemNum + 1; i++) {\n            let ndLineItem: Node;\n\n            if (i >= this.ndContainer.children.length) {\n                ndLineItem = PoolManager.instance.getNode(this.pbLine, this.ndContainer);\n            } else {\n                ndLineItem = this.ndContainer.children[i];\n            }\n\n            ndLineItem.active = true;\n\n            let UICom = ndLineItem.getComponent(UITransformComponent) as UITransformComponent;\n\n            if (i % 5 === 0) {\n                UICom.setContentSize(1.5, 7);\n            } else {\n                UICom.setContentSize(1, 5);\n            }\n        }\n\n        let layCom = this.ndContainer.getComponent(LayoutComponent) as LayoutComponent;\n        //立即执行更新布局\n        layCom.updateLayout();\n\n        //头尾不展示中间线\n        this.ndContainer.children.forEach((ndLineItem: Node, i: number)=>{\n            let spComLine = ndLineItem.getComponent(SpriteComponent) as SpriteComponent;\n            if (i === 0 || i === bloodItemNum || ndLineItem.position.x > this._bloodBarWidth * ratio) {\n                spComLine.enabled = false;\n            } else {\n                spComLine.enabled = true;\n            }\n        })\n\n        //设置白色进度条长度和位置\n        this.UIComWhiteBar.setContentSize(ratio * this._bloodBarWidth, this._bloodBarHeight * 0.8);\n        this._whiteBarPos.set(this.ndContainer.position.x, 0.5, this.ndContainer.position.z);\n        this.ndWhiteBar.setPosition(this._whiteBarPos);\n\n        //设置血量进度条长度和位置\n        this.UIComCurBloodBar.setContentSize(ratio * this._bloodBarWidth, this._bloodBarHeight * 0.8);\n        this._bloodBarPos.set(this.ndContainer.position.x, 0, this.ndContainer.position.z);\n        this.ndCurBloodBar.setPosition(this._bloodBarPos);\n\n        callback && callback();\n    }\n\n    /**\n     * 刷新血量\n     *\n     * @param {number} num 血量值\n     * @param {boolean} [isIncreaseLimit=false] //是否增加上限\n     * @memberof PlayerBloodBar\n     */\n    public refreshBlood (num: number, isIncreaseLimit: boolean = false) {\n        this.curBlood += num;\n        this.curBlood = clamp(this.curBlood, 0, this._totalBlood);\n        let ratio = this.curBlood / this._totalBlood;\n\n        if (num < 0) {//减血\n            ratio = ratio <= 0 ? 0 : ratio;\n    \n            this.UIComCurBloodBar.setContentSize(this._bloodBarWidth * ratio, this._bloodBarHeight * 0.8);\n    \n            if (ratio > 0) {\n                this.ndContainer.children.forEach((ndChild: Node)=>{\n                    let spComLine = ndChild.getComponent(SpriteComponent) as SpriteComponent;\n    \n                    if (spComLine.enabled && ndChild.position.x > this._bloodBarWidth * ratio) {\n                        spComLine.enabled = false;\n                    }\n                })\n                \n                tween(this.UIComWhiteBar)\n                .to(0.7, {width: this._bloodBarWidth * ratio})\n                .call(()=>{\n                    \n                })\n                .start();\n            } else {\n                // PoolManager.instance.putNode(this.node);\n                this.node.active = false;\n                this._scriptParent.isDie = true;\n                this.curBlood = 0;\n            }\n        } else {//加血\n            if (isIncreaseLimit) {//增加上限,并增加多出来的血量，最多不超过上限\n                this.curBlood += num;\n                this._totalBlood += num;\n                this.curBlood = this.curBlood >= this._totalBlood ? this._totalBlood : this.curBlood;\n                ratio = this.curBlood / this._totalBlood;\n            } else {//普通加血，最多不超过上限                \n                ratio = ratio >= 1 ? 1 : ratio;\n            }\n\n            tween(this.UIComCurBloodBar)\n            .to(1, {width: this._bloodBarWidth * ratio})\n            .call(()=>{\n                this.show(this._scriptParent, this._totalBlood, this.curBlood, this._offsetPos, this._scale, null);\n\n                })\n            .start();\n        }\n    }\n\n    update (deltaTime: number) {\n        // [4]\n        //血条跟随人物移动\n        if (this.node.parent && this.node.active && this._ndTarget && this._ndTarget.parent) {\n            GameManager.mainCamera?.convertToUINode(this._ndTarget.worldPosition, find(\"Canvas\") as Node, this._curPos);\n            this._curPos.add(this._offsetPos);\n            this.node.setPosition(this._curPos);\n        }\n        \n    }\n}\n"]}