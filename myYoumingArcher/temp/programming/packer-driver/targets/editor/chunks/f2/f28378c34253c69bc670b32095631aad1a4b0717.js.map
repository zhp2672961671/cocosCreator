{"version":3,"sources":["file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/fight/monster.ts"],"names":["_decorator","Component","Vec3","macro","Quat","Material","SkinnedMeshRenderer","tween","AudioManager","Util","LocalConfig","EffectManager","UIManager","Constant","GameManager","ClientEvent","MonsterModel","ResourceUtil","EnergyBall","FireBall","DispersionSurround","Dispersion","FireBallBig","Tornado","Laser","CharacterRigid","PoolManager","qt_0","v3_0","ccclass","property","Monster","scriptMonsterModel","isMoving","scriptBloodBar","bloodTipDirection","BLOOD_TIP_DIRECTION","LEFT_UP","skillInfo","allSkillInfo","baseInfo","layerInfo","curAttackSpeed","scriptWarning","attackForward","attackPos","scriptCharacterRigid","_isDie","_curAttackInterval","_isHitByPlayer","_isInitBloodBar","_bloodTipOffsetPos","_hideBloodCountDown","_hitEffectPos","_isAllowToAttack","_playerMonsterOffset","_curAngleY","_horizontal","_vertical","_iceDamageCountDown","_fireDamageCountDown","_ndMonsterSkill","_skillIndex","_minLength","_curMoveSpeed","_dissolveData","uEdge","time","_moveMode","_movePattern","_moveFrequency","_offsetPos","_offsetPos_2","_mixOffset","_targetWorPos","_isPlayRotate","_curAngle","_curAngle_2","_tempAngle","_rotateDirection","_forWard","_ndRunSmokeEffect","_originAngle","_targetAngle","_checkInterval","_currentTime","_ndBody","_curMoveWorPos","_isArrived","_checkMoveInterval","_prevMoveWorPos","_moveUnit","_minLengthRatio","_randomMoveTryTimes","_action","curMoveSpeed","v","initSpeed","moveSpeedAddition","isDie","showDie","onEnable","on","EVENT_TYPE","MONSTER_MOVE","_monsterMove","onDisable","off","node","parent","instance","putNode","recycleWarning","start","init","skiMeshCom","setMaterial","matNormal","getChildByName","getComponent","playAni","MONSTER_ANI_TYPE","IDLE","stopMove","set","movePattern","_refreshSkill","scriptMonster","attackSpeed","moveSpeed","_getMinLength","name","skill","split","length","skillID","queryByID","playSound","showRewardBounce","goldNum","heartDropRate","Math","random","scriptPlayer","isBloodthirsty","bloodNum","curHpLimit","addBlood","matDissolve","to","DIE","ndBoss","playHit","isArrowLaunch","isPassiveLightning","SOUND","HIT_MONSTER","effectPath","arrEffectPath","recycleTime","isHasIce","isArrowIce","isHasFire","isArrowFire","isHasLightning","isArrowLightning","floor","loadAndPlayEffect","gameSpeed","isAttacking","HIT","arrTargets","getNearbyMonster","forEach","ndChild","showLightningChain","dodgeRate","tipType","FIGHT_TIP","REDUCE_BLOOD","damage","curAttackPower","defensePower","defenseAddition","isCriticalHit","curCriticalHitRate","curCriticalHitDamage","CRITICAL_HIT","hp","refreshBlood","cb","showBloodTips","console","log","showMonsterBloodBar","active","playAction","obj","action","MONSTER_ACTION","MOVE","angle","value","radian","RAD","round","cos","sin","STOP_MOVE","angle_1","radian_1","ndPlayer","_attackPlayer","subtract","worldPosition","normalize","negative","y","warning","scale","ID","MONSTER_SKILL","FIRE_BALL","FIRE_BALL_BIG","LASER","ENERGY_BALL","showWarning","playAttackAni","attackAniName","ATTACK","resName","ATTACK_1","ATTACK_2","isHitting","scheduleOnce","moveFrequency","offsetLength","getTwoNodeXZLength","_moveToRandomPos","x","getRandom","getRandomDirector","z","toFixed","getTwoPosXZLength","_moveToTargetWorPos","_stayRotateAttack","MONSTER_MOVE_PATTERN","NO_MOVE","RANDOM","FORWARD_PLAYER","multiplyScalar","add","targetWorPos","angleY","_getTwoPosAngleY","selfWorPos","targetScreenPos","mainCamera","worldToScreen","selfScreenPos","atan2","PI","releaseSkillToPlayer","isNormalAttack","reduceBlood","loadEffectRes","then","prefab","getNode","ndGameManager","setWorldPosition","forward","scriptSkillCollider","DISPERSION","children","idx","TORNADO","DISPERSION_SURROUND","update","deltaTime","setProperty","isGameStart","isGameOver","isGamePause","offsetTarget","eulerAngles","isEqual","equals","lerp","fromViewUp","toEuler","abs","move","isRunning","RUN","isIdle","countDown","Number"],"mappings":"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","sourcesContent":["import { AudioManager } from './../framework/audioManager';\nimport { Util } from './../framework/util';\nimport { LocalConfig } from './../framework/localConfig';\nimport { EffectManager } from './../framework/effectManager';\nimport { UIManager } from './../framework/uiManager';\nimport { _decorator, Component, Vec3, macro, Node, Quat, Material, MeshRenderer, SkinnedMeshBatchRenderer, SkinnedMeshRenderer, tween } from 'cc';\nimport { Constant } from '../framework/constant';\nimport { GameManager } from './gameManager';\nimport { MonsterBloodBar } from '../ui/fight/monsterBloodBar';\nimport { ClientEvent } from '../framework/clientEvent';\nimport { MonsterModel } from './monsterModel';\nimport { ResourceUtil } from '../framework/resourceUtil';\nimport { EnergyBall } from './monsterSkill/energyBall';\nimport { FireBall } from './monsterSkill/fireBall';\nimport { DispersionSurround } from './monsterSkill/dispersionSurround';\nimport { Dispersion } from './monsterSkill/dispersion';\nimport { FireBallBig } from './monsterSkill/fireBallBig';\nimport { Tornado } from './monsterSkill/tornado';\nimport { Laser } from './monsterSkill/laser';\nimport { CharacterRigid } from './characterRigid';\nimport { PoolManager } from '../framework/poolManager';\nlet qt_0 = new Quat();\nlet v3_0 = new Vec3();\n\nconst { ccclass, property } = _decorator;\n//普通怪物脚本\n@ccclass('Monster')\nexport class Monster extends Component {\n    @property(Material)\n    public matNormal: Material = null!;//默认材质\n\n    @property(Material)\n    public matDissolve: Material = null!;//阵亡时候溶解材质\n\n    @property(SkinnedMeshRenderer)\n    public skiMeshCom: SkinnedMeshRenderer = null!;//怪物蒙皮组件\n\n    public scriptMonsterModel: MonsterModel = null!;//怪物动画组件播放脚本\n    public isMoving: boolean = false;//怪物是否正在移动\n    public scriptBloodBar: MonsterBloodBar = null!;//关联的血条脚本\n    public bloodTipDirection: number = Constant.BLOOD_TIP_DIRECTION.LEFT_UP;//血量提示方向\n    public skillInfo: any = null!;//技能信息\n    public allSkillInfo: any = null!;//所有拥有的技能信息\n    public baseInfo: any = null!;//怪物在base表里面对应数据\n    public layerInfo: any = null!;//怪物在当前层级的配置数据\n    public curAttackSpeed: number = 0;//当前攻击速度\n    public scriptWarning: any = null!;//预警技能脚本\n    public attackForward: Vec3 = new Vec3();//攻击朝向\n    public attackPos: Vec3 = new Vec3();//技能即将攻击的位置\n    public scriptCharacterRigid: CharacterRigid = null!;\n    public set curMoveSpeed (v: number) {\n        this._curMoveSpeed = v;\n        this.scriptCharacterRigid.initSpeed(v, GameManager.moveSpeedAddition);\n    }\n\n    public get curMoveSpeed () {\n        return this._curMoveSpeed;\n    }\n\n    public set isDie (v: boolean) {\n        this._isDie = v;\n\n        if (this._isDie) {\n            this.showDie();\n        }\n    }\n\n    public get isDie () {\n        return this._isDie;\n    }\n\n    protected _isDie: boolean = false;//是否死亡\n    protected _curAttackInterval: number = 0;//距离上次被攻击的时长\n    protected _isHitByPlayer: boolean = false;//是否被玩家击中\n    protected _isInitBloodBar: boolean = false;//是否已经初始化血条\n    protected _bloodTipOffsetPos: Vec3 = new Vec3(0, 50, 0);//怪物血条距离人物位置偏差\n    protected _hideBloodCountDown: number = 3;//怪物的血条被攻击后才会显示，且如果3秒未被攻击则会隐藏\n    protected _hitEffectPos: Vec3 = new Vec3(0, 0.2, 0);//受击特效位置\n    protected _isAllowToAttack: boolean = false;//是否允许攻击\n    protected _playerMonsterOffset: Vec3 = new Vec3();//怪物和玩家间距\n    protected _curAngleY: number = 0;//当前Y分量旋转角度\n    protected _horizontal: number = 0;//水平移动距离\n    protected _vertical: number = 0;//垂直移动距离\n    protected _iceDamageCountDown: number = 0;//冰冻伤害倒计时\n    protected _fireDamageCountDown: number = 0;//灼烧伤害倒计时\n    protected _ndMonsterSkill: Node = null!;//技能特效节点\n    protected _skillIndex: number = 0;//当前技能索引\n    protected _minLength: number = 3;//怪物和玩家之间的最小距离\n    protected _curMoveSpeed: number = 0;//当前移动速度\n    protected _dissolveData: any = {uEdge: 1, time: 1};//溶解数据，v溶解程度默认为1（0为完全溶解），time为溶解所需时间\n    //移动相关\n    protected _moveMode: number = 0;//移动方式\n    protected _movePattern: number = 0;//移动模式\n    protected _moveFrequency: number = 0;//两次移动间隔,为0表示一直移动)\n    protected _offsetPos: Vec3 = new Vec3();//和玩家之间的向量差\n    protected _offsetPos_2: Vec3 = new Vec3();//和玩家之间的向量差\n    protected _mixOffset: Vec3 = new Vec3(1, 0, 1);//和玩家的最小间距\n    protected _targetWorPos: Vec3 = new Vec3();//下一步的目标位置\n    protected _isPlayRotate: boolean = false;//是否旋转\n    protected _curAngle: Vec3 = new Vec3()//当前旋转的角度\n    protected _curAngle_2: Vec3 = new Vec3();//怪物角度\n    protected _tempAngle: Vec3 = new Vec3();//临时变量，怪物角度\n    protected _rotateDirection: Vec3 = new Vec3();//旋转方向\n    protected _forWard: Vec3 = new Vec3();//朝向\n    protected _ndRunSmokeEffect: Node = null!;//烟雾特效\n    protected _originAngle: Vec3 = new Vec3(0, -90, 0);//怪物开始角度\n    protected _targetAngle: Vec3 = new Vec3();//目标旋转角度\n    protected _checkInterval: number = 0.04;//每40ms刷新一次\n    protected _currentTime: number = 0;//当前累积时间\n    protected _ndBody: Node = null!;//\n    protected _curMoveWorPos: Vec3 = new Vec3();//当前怪物移动位置\n    protected _isArrived: boolean = false;//是否到达\n    protected _checkMoveInterval: number = 0;//检查当前是否移动时间间隔\n    protected _prevMoveWorPos: Vec3 = new Vec3();//之前怪物的移动坐标\n    protected _moveUnit: Vec3 = new Vec3();//每次移动的单位向量\n    protected _minLengthRatio: number = 1.1;//达到最小距离的1.1倍视为进入最小距离\n    protected _randomMoveTryTimes: number= 5;//每次随机移动位置最多计算次数\n    protected _action: number = 0;//怪物行为\n\n    onEnable () {\n        ClientEvent.on(Constant.EVENT_TYPE.MONSTER_MOVE, this._monsterMove, this);\n    }\n\n    onDisable () {\n        ClientEvent.off(Constant.EVENT_TYPE.MONSTER_MOVE, this._monsterMove, this);\n\n        //回收血条节点\n        if (this.scriptBloodBar) {\n            if (this.scriptBloodBar.node.parent) {\n                PoolManager.instance.putNode(this.scriptBloodBar.node);\n            }\n            this.scriptBloodBar = null!;\n        }\n\n        //回收预警节点\n        this.recycleWarning();\n\n        //回收技能节点\n        if (this._ndMonsterSkill) {\n            PoolManager.instance.putNode(this._ndMonsterSkill);\n            this._ndMonsterSkill = null!;\n        }\n    }\n\n    start () {\n        // [3]\n    }\n\n    public init(baseInfo: any, layerInfo: any) {\n        this.baseInfo = baseInfo;\n        this.layerInfo = layerInfo;\n        this.isDie = false;\n        \n        this.recycleWarning();\n        this.skiMeshCom.setMaterial(this.matNormal, 0);\n\n        this._ndBody = this.node.getChildByName(\"body\") as Node;\n        this.scriptMonsterModel = this._ndBody.getComponent(MonsterModel) as MonsterModel;\n        this.scriptMonsterModel.playAni(Constant.MONSTER_ANI_TYPE.IDLE, true);\n\n        this.scriptCharacterRigid = this.node.getComponent(CharacterRigid) as CharacterRigid;\n        this.scriptCharacterRigid.stopMove();\n\n        this._curAttackInterval = 0;\n        this._isHitByPlayer = false;\n        this._isInitBloodBar = false;\n        this._isAllowToAttack = false;\n        this._isArrived = false;\n        this._checkMoveInterval = 0;\n        this._iceDamageCountDown = 0;\n        this._fireDamageCountDown = 0;\n        this._ndMonsterSkill = null!;\n        this._skillIndex = 0;\n        this._moveUnit.set(0, 0, 0);\n        this._movePattern = layerInfo.movePattern ? layerInfo.movePattern : this.baseInfo.movePattern;\n        this._dissolveData.uEdge = 1;\n        \n        this.scriptBloodBar = null!;\n\n        this._refreshSkill();\n\n        this.scriptMonsterModel.scriptMonster = this;\n\n        this.curAttackSpeed = this.baseInfo.attackSpeed;\n        this.curMoveSpeed = this.baseInfo.moveSpeed;\n\n        this._getMinLength();\n    }\n\n    /**\n     * 获取怪物和玩家之间的最小距离\n     *\n     * @memberof Monster\n     */\n    protected _getMinLength () {\n        if (this.node.name === \"aula\") {\n            this._minLength = 2;\n            this._dissolveData.time = 3.33;\n        } else if (this.node.name === \"boomDragon\") {\n            this._minLength = 2;\n            this._dissolveData.time = 0.87;\n        } else if (this.node.name === \"hellFire\") {\n            this._minLength = 2.5;\n            this._dissolveData.time = 1.06;\n        } else if (this.node.name === \"magician\") {\n            this._minLength = 2.5;\n            this._dissolveData.time = 0.87;\n        } else if (this.node.name === \"dragon\") {\n            this._minLength = 5;\n            this._dissolveData.time = 2;\n        }\n    }\n\n    /**\n     * 刷新当前使用技能\n     *\n     * @private\n     * @memberof Monster\n     */\n    protected _refreshSkill () {\n        this.allSkillInfo = this.layerInfo.skill === \"\" ? [] :this.layerInfo.skill.split(\"#\");\n        if (this.allSkillInfo.length) {\n            this._skillIndex = this._skillIndex >= this.allSkillInfo.length ? 0 : this._skillIndex;\n            let skillID = this.allSkillInfo[this._skillIndex];\n            this.skillInfo = LocalConfig.instance.queryByID(\"monsterSkill\", skillID);\n            this._skillIndex += 1;\n        } \n    }\n\n    /**\n     * 怪物阵亡\n     *\n     * @memberof Monster\n     */\n    public showDie () {\n        this.scriptCharacterRigid.stopMove();\n\n        this.recycleWarning();\n\n        AudioManager.instance.playSound(`${this.node.name}Die`);\n        \n        EffectManager.instance.showRewardBounce(this.node, \"gold/gold\", this.baseInfo.goldNum, ()=>{\n            if (this.baseInfo.heartDropRate >= Math.random()) {\n                EffectManager.instance.showRewardBounce(this.node, \"heart/heart\", 1);\n            }\n        });\n\n        //检查玩家是否拥有嗜血技能：主角击杀敌人时回复自身生命上限2%的生命值。\n        if (GameManager.scriptPlayer.isBloodthirsty) {\n            let bloodNum = GameManager.scriptPlayer.curHpLimit * 0.02;\n            GameManager.scriptPlayer.addBlood(bloodNum);\n        }\n\n        //溶解效果\n        this.skiMeshCom.setMaterial(this.matDissolve, 0);\n        tween(this._dissolveData)\n        .to(this._dissolveData.time, {uEdge: 0.1})\n        .start();\n\n        this.scriptMonsterModel.playAni(Constant.MONSTER_ANI_TYPE.DIE, false, ()=>{\n            if (this.isDie) {\n                if (GameManager.ndBoss) {\n                    GameManager.ndBoss = null!;\n                }\n\n                if (this.scriptBloodBar) {\n                    this.scriptBloodBar = null!\n                }\n\n                PoolManager.instance.putNode(this.node);\n            }\n        });\n    }\n\n    public recycleWarning () {\n        //回收预警节点\n        if (this.scriptWarning) {\n            if (this.scriptWarning.node.parent) {\n                PoolManager.instance.putNode(this.scriptWarning.node);\n            } \n            this.scriptWarning = null!;\n        }\n    }\n\n    /**\n     * 怪物播放受击效果\n     *\n     * @param {boolean} isArrowLaunch 是否被弹射的弓箭射中，如果是则造成普通伤害\n     * @param {boolean} isPassiveLightning 是否被动受到电击\n     * @return {*} \n     * @memberof Monster\n     */\n    public playHit (isArrowLaunch: boolean = false, isPassiveLightning: boolean = false) {\n        if (this.isDie) {\n            return;\n        }\n\n        AudioManager.instance.playSound(Constant.SOUND.HIT_MONSTER);\n\n        //播放受击特效\n        let effectPath = \"hit/hit\";\n        let arrEffectPath: any = [];\n        let recycleTime = 1.2;\n        \n        let isHasIce = GameManager.scriptPlayer.isArrowIce;\n        let isHasFire = GameManager.scriptPlayer.isArrowFire;\n        let isHasLightning = GameManager.scriptPlayer.isArrowLightning;\n\n        if (isHasFire || isHasIce || isHasLightning) {\n            if (isHasFire && isHasIce && isHasLightning) {\n                arrEffectPath = [\"hit/hitFire\", \"hit/hitIce\", \"hit/hitLightning\"];\n            } else {\n                if (isHasFire && isHasIce || isHasFire && isHasLightning || isHasIce && isHasLightning) {\n                    if (isHasFire && isHasIce) {\n                        arrEffectPath = [\"hit/hitFire\", \"hit/hitIce\"];\n                    } else if (isHasLightning && isHasFire) {\n                        arrEffectPath = [\"hit/hitFire\", \"hit/hitLightning\"];\n                    } else if (isHasLightning && isHasIce) {\n                        arrEffectPath = [\"hit/hitIce\", \"hit/hitLightning\"];\n                    }\n                } else {\n                    if (isHasFire) {\n                        arrEffectPath = [\"hit/hitFire\"];\n                    } else if (isHasIce) {\n                        arrEffectPath = [\"hit/hitIce\"];\n                    } else if (isHasLightning) {\n                        arrEffectPath = [\"hit/hitLightning\"];\n                    }\n                }\n            }\n\n            effectPath = arrEffectPath[Math.floor(Math.random() * arrEffectPath.length)];\n\n            if (effectPath === \"hit/hitFire\") {\n                //灼烧技能持续2秒\n                recycleTime = 2;\n            } else if (effectPath === \"hit/hitIce\") {\n                recycleTime = 1;\n            }\n\n            //被冰冻技能击中\n            if (isHasIce && this._iceDamageCountDown <= 0) {\n                this._iceDamageCountDown = 1;\n            }\n\n            //被灼烧技能击中\n            if (isHasFire && this._fireDamageCountDown <= 0) {\n                this._fireDamageCountDown = 2;\n            }\n        } \n\n        EffectManager.instance.loadAndPlayEffect(true, this.node, effectPath, 1, this._hitEffectPos, null, false, true, GameManager.gameSpeed, true, recycleTime);\n        \n\n        //攻击的时候霸体状态\n        if (!this.scriptMonsterModel.isAttacking) {\n            this.scriptMonsterModel.playAni(Constant.MONSTER_ANI_TYPE.HIT);\n        }\n\n        //受到攻击的敌人会向身旁一定范围内的所有敌人发射闪电，减少生命上限5%的生命值\n        if (GameManager.scriptPlayer.isArrowLightning && !isPassiveLightning) {\n            let arrTargets = GameManager.getNearbyMonster(this.node, true);\n\n            if (arrTargets) {\n                arrTargets.forEach((ndChild: Node)=>{\n                    EffectManager.instance.showLightningChain(this.node, ndChild);\n                    let scriptMonster = ndChild.getComponent(Monster) as Monster;\n                    scriptMonster.playHit(false, true);\n                })                \n            }\n        }\n\n        //怪物扣血\n        if (Math.random() > this.baseInfo.dodgeRate) {\n            //闪避失败\n            let tipType = Constant.FIGHT_TIP.REDUCE_BLOOD;\n            let damage = GameManager.scriptPlayer.curAttackPower * (1 - this.baseInfo.defensePower * GameManager.defenseAddition / (this.baseInfo.defensePower + 400));\n            let isCriticalHit = Math.random() <= GameManager.scriptPlayer.curCriticalHitRate;//是否暴击\n            //是否暴击\n            if (isCriticalHit) {\n                //不是被弹射的箭击中，且不是被动受到电击\n                if (!isArrowLaunch && !isPassiveLightning) {\n                    damage = damage * GameManager.scriptPlayer.curCriticalHitDamage;\n                    tipType = Constant.FIGHT_TIP.CRITICAL_HIT;\n                }\n            } \n            \n            if (isPassiveLightning) {\n                damage = this.baseInfo.hp * 0.05 * (1 - this.baseInfo.defensePower / (this.baseInfo.defensePower + 400));\n            }\n\n            this.refreshBlood(-damage, tipType);\n        }\n    }\n\n    /**\n     * 刷新血量\n     *\n     * @private\n     * @param {number} bloodNum\n     * @memberof Monster\n     */\n    public refreshBlood (bloodNum: number, tipType: number) {\n        let cb = () => {\n            this.scriptBloodBar.refreshBlood(bloodNum);\n            UIManager.instance.showBloodTips(this, tipType, bloodNum, this._bloodTipOffsetPos);\n        }\n\n        this._curAttackInterval = 0;\n\n        if (!this._isInitBloodBar) {\n            this._isInitBloodBar = true;\n            console.log(\"###小怪生成新的血条\", this.node.name);\n            UIManager.instance.showMonsterBloodBar(this, this.baseInfo.hp, ()=>{\n                cb();\n            });\n        } else {\n            if (this.scriptBloodBar) {\n                this.scriptBloodBar.node.active = true;\n                cb();\n            }\n        }\n    }\n\n    /**\n     * 怪物行为\n     *\n     * @param {*} obj\n     * @memberof Player\n     */\n     public playAction (obj: any) {\n        this._action = obj.action;\n\n        switch (obj.action) {\n            case Constant.MONSTER_ACTION.MOVE://向目标位置移动\n                let angle = obj.value + 135;\n                let radian = angle * macro.RAD;\n                this._horizontal = Math.round(Math.cos(radian) * 1);\n                this._vertical = Math.round(Math.sin(radian) * 1);  \n                this._curAngleY = obj.value;\n                this._curAngleY = this._curAngleY < 0 ? this._curAngleY + 360 : this._curAngleY > 360 ? this._curAngleY - 360 : this._curAngleY;\n                this.isMoving = true;\n                break;\n            case Constant.MONSTER_ACTION.STOP_MOVE://停止移动，原地转向玩家，攻击玩家\n                let angle_1 = obj.value + 135;\n                let radian_1 = angle_1 * macro.RAD;\n                this._horizontal = Math.round(Math.cos(radian_1) * 1);\n                this._vertical = Math.round(Math.sin(radian_1) * 1);  \n                this._curAngleY = obj.value;\n                this._curAngleY = this._curAngleY < 0 ? this._curAngleY + 360 : this._curAngleY > 360 ? this._curAngleY - 360 : this._curAngleY;\n                this.isMoving = false;\n                this.scriptCharacterRigid.stopMove();\n\n                if (GameManager.ndPlayer) {\n                    this._attackPlayer();\n                } else {\n                    this.scriptMonsterModel.playAni(Constant.MONSTER_ANI_TYPE.IDLE, true);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * 攻击玩家\n    */\n    protected _attackPlayer () {\n        if (GameManager.scriptPlayer.isDie || this.scriptMonsterModel.isAttacking) {\n            return;\n        }\n\n        Vec3.subtract(this._offsetPos_2, GameManager.ndPlayer.worldPosition, this.node.worldPosition);\n        let length = this._offsetPos_2.length();\n        this.attackForward = this._offsetPos_2.normalize().negative();\n        this.attackForward.y = 0;\n        this.attackPos.set(GameManager.ndPlayer.worldPosition);\n\n        //预警\n        if (this.allSkillInfo.length && this.skillInfo && this.skillInfo.warning) {\n            let scale = 1;\n            if (this.skillInfo.ID === Constant.MONSTER_SKILL.FIRE_BALL) {\n                scale = 0.1;\n            } else if (this.skillInfo.ID === Constant.MONSTER_SKILL.FIRE_BALL_BIG) {\n                scale = 0.4;\n            } else if (this.skillInfo.ID === Constant.MONSTER_SKILL.LASER) {\n                scale = 3;\n            } else if (this.skillInfo.ID === Constant.MONSTER_SKILL.ENERGY_BALL) {\n                scale = length;\n            }\n\n            //回收预警节点\n            this.recycleWarning();\n\n            EffectManager.instance.showWarning(this.skillInfo.warning, scale, this, ()=>{\n                this.playAttackAni();\n            });\n        } else {\n            this.playAttackAni();\n        }\n    }\n\n    /**\n     * 播放攻击动画\n     *\n     * @protected\n     * @memberof Monster\n     */\n    public playAttackAni () {\n        let attackAniName = Constant.MONSTER_ANI_TYPE.ATTACK;\n        if (this.baseInfo.resName === \"hellFire\") {\n            //hellFire的攻击动画有两个，其他小怪动画只有一个\n            if (!this.allSkillInfo.length) {\n                //近战\n                attackAniName = Constant.MONSTER_ANI_TYPE.ATTACK_1;\n            } else {\n                //远程\n                attackAniName = Constant.MONSTER_ANI_TYPE.ATTACK_2;\n            }\n        }\n\n        //远程\n        if (this.allSkillInfo.length) {\n            this.scriptMonsterModel.playAni(attackAniName, false, ()=>{\n                if (!this.isDie && !this.scriptMonsterModel.isHitting) {\n                    this.scheduleOnce(()=>{\n                        this._monsterMove()\n                    }, this.baseInfo.moveFrequency)\n                }\n            });\n        } else {\n            //近战\n            let offsetLength = Util.getTwoNodeXZLength(this.node, GameManager.ndPlayer);\n            if (offsetLength <= this._minLength * this._minLengthRatio) {\n                this.scriptMonsterModel.playAni(attackAniName, false, ()=>{\n                    if (!this.isDie && !this.scriptMonsterModel.isHitting) {\n                        this.scheduleOnce(()=>{\n                            this._monsterMove()\n                        }, this.baseInfo.moveFrequency)\n                    }\n                });\n            } else {\n                if (!this.isDie && !this.scriptMonsterModel.isHitting) {\n                    this.scheduleOnce(()=>{\n                        this._monsterMove()\n                    }, this.baseInfo.moveFrequency)\n                }\n            }\n        }\n    }\n    \n    /**\n     * 移动到随机位置\n     *\n     * @private\n     * @memberof Monster\n     */\n    private _moveToRandomPos () {\n        this._randomMoveTryTimes -= 1;\n        //随机移动：先以怪物圆环区间(1, minLength)随机移动,再朝向玩家,然后攻击\n        let x = Util.getRandom(1, 3) * Util.getRandomDirector();\n        let z = Util.getRandom(1, 3) * Util.getRandomDirector();\n        this._targetWorPos.set(Util.toFixed(this.node.worldPosition.x + x), Util.toFixed(this.node.worldPosition.y), Util.toFixed(this.node.worldPosition.z + z));\n\n        let offsetLength = Util.getTwoPosXZLength(this._targetWorPos.x, this._targetWorPos.z, GameManager.ndPlayer.worldPosition.x, GameManager.ndPlayer.worldPosition.z);\n        //当目标位置和玩家大于最小距离，进行移动\n        if (offsetLength > this._minLength) {\n            Vec3.subtract(this._offsetPos, this._targetWorPos, this.node.worldPosition);\n            this._offsetPos.y = 0;\n            Vec3.normalize(this._moveUnit, this._offsetPos);\n            \n            this._moveToTargetWorPos(this._targetWorPos);\n            this.isMoving = true;\n            this._isArrived = false;\n        } else {\n            //否则尝试5次随机移动，都没合适的位置则进行进攻\n            if (this._randomMoveTryTimes <= 0) {\n                this._stayRotateAttack();\n            } else {\n                this._moveToRandomPos();\n            }\n        }\n    }\n\n    /**\n     * 先移动\n     *\n     * @private\n     * @memberof Monster\n     */\n    protected _monsterMove () {\n        if (this.isDie) {\n            return;\n        }\n\n        if (!this._isAllowToAttack) {\n            this._isAllowToAttack = true;\n        }\n        \n        if (this._movePattern === Constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n            //不移动，原地攻击玩家\n            this._stayRotateAttack();\n        } else if (this._movePattern === Constant.MONSTER_MOVE_PATTERN.RANDOM) {\n            this._randomMoveTryTimes = 5;\n            this._moveToRandomPos();\n        } else if (this._movePattern === Constant.MONSTER_MOVE_PATTERN.FORWARD_PLAYER) {\n            //面向玩家移动：先面向玩家，再移动，然后攻击\n            this._moveToTargetWorPos(GameManager.ndPlayer.worldPosition);\n            Vec3.subtract(this._offsetPos, GameManager.ndPlayer.worldPosition, this.node.worldPosition);\n            this._offsetPos.y = 0;\n\n            let offsetLength = Util.getTwoNodeXZLength(this.node, GameManager.ndPlayer);\n            //当怪物和玩家小于2个最小距离之和或者大于一个最小距离且小于两个最小距离，进行移动\n            if (offsetLength > this._minLength * 2 || (offsetLength > this._minLength && offsetLength < this._minLength * 2)) {\n                //单位向量\n                Vec3.normalize(this._moveUnit, this._offsetPos);\n                Vec3.multiplyScalar(this._offsetPos, this._moveUnit, this._minLength);\n\n                if (offsetLength > this._minLength * 2) {\n                    //向玩家移动2个单位向量\n                    Vec3.add(this._targetWorPos, this.node.worldPosition, this._offsetPos);\n                } else {\n                    Vec3.subtract(this._targetWorPos, GameManager.ndPlayer.worldPosition, this._offsetPos);\n                }\n               \n                this._targetWorPos.set(Util.toFixed(this._targetWorPos.x), Util.toFixed(this.node.worldPosition.y), Util.toFixed(this._targetWorPos.z));\n                this._isArrived = false;\n                this.isMoving = true;\n            } else {\n                //与玩家相距小于等于最小距离，怪物原地进行攻击\n                this._stayRotateAttack();\n            }\n        }\n    }\n\n    /**\n     * 怪物向目标位置移动\n     *\n     * @private\n     * @memberof Monster\n     */\n    protected _moveToTargetWorPos (targetWorPos: Vec3) {\n        let angleY = this._getTwoPosAngleY(this.node.worldPosition, targetWorPos);\n        this.playAction({action: Constant.MONSTER_ACTION.MOVE, value: angleY});\n    }\n\n    protected _getTwoPosAngleY (selfWorPos: Vec3, targetWorPos: Vec3) {\n        let targetScreenPos =  GameManager.mainCamera?.worldToScreen(targetWorPos) as Vec3;\n        let selfScreenPos = GameManager.mainCamera?.worldToScreen(selfWorPos) as Vec3;\n        Vec3.subtract(this._playerMonsterOffset, targetScreenPos, selfScreenPos);\n        let angleY = Math.round(Math.atan2(this._playerMonsterOffset.y, this._playerMonsterOffset.x) * 180 / Math.PI);\n        return angleY;\n    }\n\n    /**\n     * 怪物原地不动-旋转角度朝向玩家-攻击玩家\n     *\n     * @protected\n     * @memberof Monster\n     */\n    protected _stayRotateAttack () {\n        let angleY = this._getTwoPosAngleY(this.node.worldPosition, GameManager.ndPlayer.worldPosition);\n        this.playAction({action: Constant.MONSTER_ACTION.STOP_MOVE, value: angleY});\n    }\n\n    /**\n     * 向玩家释放技能\n     *\n     * @returns\n     * @memberof Player\n     */\n    public releaseSkillToPlayer (isNormalAttack?:boolean) {\n        //没有技能则使用近战\n        if (!this.allSkillInfo.length) {\n            let offsetLength = Util.getTwoNodeXZLength(this.node, GameManager.ndPlayer);\n            if (offsetLength <= this._minLength * this._minLengthRatio) {\n                GameManager.scriptPlayer.reduceBlood(this.baseInfo);\n            }\n            return;\n        }\n\n        //加载对应技能\n        ResourceUtil.loadEffectRes(`${this.skillInfo.resName}/${this.skillInfo.resName}`).then((prefab: any)=>{\n            if (this.isMoving) {\n                return;\n            }\n            this._ndMonsterSkill = PoolManager.instance.getNode(prefab, GameManager.ndGameManager as Node) as Node;\n            this._ndMonsterSkill.setWorldPosition(this.node.worldPosition.x, 2.5, this.node.worldPosition.z);\n            this._ndMonsterSkill.forward = this.attackForward.negative();\n            \n            let scriptSkillCollider: any = null!;\n\n            //怪物技能初始化\n            switch (this.skillInfo.ID) {\n                case Constant.MONSTER_SKILL.ENERGY_BALL:\n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(EnergyBall) as EnergyBall;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case Constant.MONSTER_SKILL.FIRE_BALL: \n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(FireBall) as FireBall;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case Constant.MONSTER_SKILL.DISPERSION:\n                    this._ndMonsterSkill.children.forEach((ndChild: Node, idx: number)=>{\n                        let scriptSkillCollider = ndChild.getComponent(Dispersion) as Dispersion;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo);\n                    })\n                    break;\n                case Constant.MONSTER_SKILL.TORNADO: \n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(Tornado) as Tornado;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case Constant.MONSTER_SKILL.FIRE_BALL_BIG:\n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(FireBallBig) as FireBallBig;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case Constant.MONSTER_SKILL.DISPERSION_SURROUND:\n                    this._ndMonsterSkill.children.forEach((ndChild: Node)=>{\n                        let scriptSkillCollider = ndChild.getComponent(DispersionSurround) as DispersionSurround;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo);\n                    })\n                    break;\n                case Constant.MONSTER_SKILL.LASER:\n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(Laser) as Laser;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n            }\n\n            this._refreshSkill();\n        })\n    }\n\n    update (deltaTime: number) {\n        //刷新溶解材质\n        if (this.isDie && this._dissolveData.uEdge > 0.1) {\n            this.matDissolve.setProperty(\"uEdge\", this._dissolveData.uEdge);\n            return;\n        }\n\n        if (!GameManager.isGameStart || GameManager.isGameOver || GameManager.isGamePause || this.isDie || !this._isAllowToAttack || !GameManager.scriptPlayer || GameManager.scriptPlayer.isDie) {\n            return;\n        }\n\n        //3秒未被攻击则会隐藏血条\n        if (!this._isHitByPlayer && this.scriptBloodBar) {\n            this._curAttackInterval += deltaTime;\n\n            if (this._curAttackInterval >= this._hideBloodCountDown && this.scriptBloodBar.node.active) {\n                this.scriptBloodBar.node.active = false;\n            }\n        }\n\n        //是否进行移动\n        if (this.isMoving) {\n            if (this._movePattern === Constant.MONSTER_MOVE_PATTERN.RANDOM) {\n                //如果移动到目标位置就停止移动\n                let offsetLength = Util.getTwoPosXZLength(this.node.worldPosition.x, this.node.worldPosition.z, this._targetWorPos.x, this._targetWorPos.z);\n                let offsetTarget = 0.05;\n\n                //爆炸龙的位移是跳，不容易精准到达目标位置,把达到范围适当增大\n                if (this.baseInfo.resName === 'boomDragon') {\n                    offsetTarget = 0.5;\n                }\n\n                if (offsetLength <= offsetTarget && !this._isArrived) {\n                    // console.log(\"###随机移动，到达目标位置\");\n                    this._isArrived = true;\n                    this._stayRotateAttack();\n                }\n                \n            } else if (this._movePattern === Constant.MONSTER_MOVE_PATTERN.FORWARD_PLAYER) {\n\n                let offsetLength = Util.getTwoPosXZLength(this.node.worldPosition.x, this.node.worldPosition.z, this._targetWorPos.x, this._targetWorPos.z);\n                if (offsetLength <= 0.05 && !this._isArrived) {\n                    // console.log(\"###面向玩家移动，到达目标位置\");\n                    // 进行攻击\n                    this._isArrived = true;\n                    this._stayRotateAttack();\n                }\n            }\n        }\n\n        //怪物旋转\n        if (this._isPlayRotate) {\n            //当前怪物角度\n            this._tempAngle.set(this.node.eulerAngles);\n            this._tempAngle.y = this._tempAngle.y < 0 ? this._tempAngle.y + 360 : this._tempAngle.y;\n\n            if (this._curAngle.length() === 0) {\n                this._curAngle.set(this._tempAngle);\n            }\n\n            this.node.eulerAngles = this._tempAngle;\n            //第二个参数越小朝向越精确\n            let isEqual = this._curAngle.equals(this._targetAngle, 0.01);\n\n            if (!isEqual) {\n                Vec3.lerp(this._curAngle, this._curAngle, this._targetAngle, 0.167);\n                this.node.eulerAngles = this._curAngle;\n            } else {\n                this._isPlayRotate = false;\n                this.node.eulerAngles = this._targetAngle;\n                this._curAngle.set(0, 0, 0);\n            }\n        }\n\n        if (this._horizontal !== 0 || this._vertical !== 0) {\n            //计算出旋转角度\n            this._rotateDirection.set(this._horizontal, 0, -this._vertical);\n            this._rotateDirection = this._rotateDirection.normalize();\n        \n            Quat.fromViewUp(qt_0, this._rotateDirection);\n            Quat.toEuler(v3_0, qt_0);\n            v3_0.y = v3_0.y < 0 ? v3_0.y + 360 : v3_0.y;\n\n            this._isPlayRotate = true;\n            \n            //设置当前怪物角度为正数\n            this._curAngle_2.set(this.node.eulerAngles);\n            if (this._curAngle_2.y < 0) {\n                this._curAngle_2.y += 360;\n                this.node.eulerAngles = this._curAngle_2; // 转为0~360\n            } else if (this._curAngle_2.y > 360) {\n                this._curAngle_2.y -= 360;\n                this.node.eulerAngles = this._curAngle_2; // 转为0~360\n            }\n\n            //设置目标旋转角度\n            if (!v3_0.equals(this.node.eulerAngles, 0.01)) {\n                this._targetAngle.y = this._curAngleY + 225;\n                this._targetAngle.y = this._targetAngle.y < 0 ? this._targetAngle.y + 360 : this._targetAngle.y > 360 ? this._targetAngle.y - 360 : this._targetAngle.y;\n                this._targetAngle.x = 0; \n                this._targetAngle.z = 0;\n\n                if (Math.abs(this._targetAngle.y - this._curAngle_2.y) > 180) {\n                    if (this._targetAngle.y > this._curAngle_2.y) {\n                        this._targetAngle.y -= 360;\n                    } else {\n                        this._targetAngle.y += 360;\n                    }\n                }\n\n                //每次有新的_targetAngle之后，先将_curAngle初始化\n                this._curAngle.set(0, 0, 0);\n            } else {\n                this._isPlayRotate = false;\n                this.node.eulerAngles = v3_0;\n            }\n\n            if (!this.isMoving) {\n                return;\n            }\n\n            //怪物朝着目标位置移动：\n            if (this._movePattern !== Constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n                this.scriptCharacterRigid.move(-this._moveUnit.x * this.curMoveSpeed * GameManager.moveSpeedAddition * 0.5 * deltaTime, -this._moveUnit.z * this.curMoveSpeed * GameManager.moveSpeedAddition * 0.5 * deltaTime);\n            }\n\n            if (!this.scriptMonsterModel.isRunning && this._movePattern !== Constant.MONSTER_MOVE_PATTERN.NO_MOVE && this._action !== Constant.MONSTER_ACTION.STOP_MOVE) {\n                this.scriptMonsterModel.playAni(Constant.MONSTER_ANI_TYPE.RUN, true);\n            }\n        } else {\n            if (!this.isDie && !this.scriptMonsterModel.isIdle && !this.scriptMonsterModel.isAttacking && !this.scriptMonsterModel.isHitting) {\n                this.scriptMonsterModel.playAni(Constant.MONSTER_ANI_TYPE.IDLE, true);\n                this.scriptCharacterRigid.stopMove();\n            }\n        }\n\n        //冰冻持续降低攻击力和伤害\n        if (this._iceDamageCountDown > 0) {\n            this._iceDamageCountDown -= deltaTime;\n            this.curAttackSpeed = this.baseInfo.attackSpeed * (1 - 0.1);\n            this.curMoveSpeed = this.baseInfo.moveSpeed * (1 - 0.5);\n\n            if (this._iceDamageCountDown <= 0) {\n                this.curAttackSpeed = this.baseInfo.attackSpeed;\n                this.curMoveSpeed = this.baseInfo.moveSpeed;\n            }\n        }\n\n        //灼烧持续扣血\n        if (this._fireDamageCountDown > 0) {\n            this._fireDamageCountDown -= deltaTime;\n\n            let countDown = Number((this._fireDamageCountDown).toFixed(2))\n            countDown = countDown * 100 % 50;\n            if (countDown === 0) {\n                let bloodNum = this.baseInfo.hp * 0.05;\n                this.refreshBlood(-bloodNum, Constant.FIGHT_TIP.REDUCE_BLOOD);\n            }\n        }\n\n        //检查当前是否碰到障碍或者其他物体导致无法达到目标位置\n        if (this._movePattern !== Constant.MONSTER_MOVE_PATTERN.NO_MOVE && !this._isArrived) {\n            this._checkMoveInterval += deltaTime;\n            if (this._checkMoveInterval >= 0.2) {\n                this._checkMoveInterval = 0;\n                \n                let length = Util.getTwoPosXZLength(this._prevMoveWorPos.x, this._prevMoveWorPos.z, this.node.worldPosition.x, this.node.worldPosition.z);\n                if (this.scriptMonsterModel.isRunning && length <= 0.01) {\n                    this._stayRotateAttack();\n                    // console.log(\"###碰到障碍, 停止移动\");\n                } else {\n                    this._prevMoveWorPos.set(this.node.worldPosition);\n                }\n            }\n        }\n    }\n}\n"]}