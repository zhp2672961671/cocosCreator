{"version":3,"sources":["file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/playerData.ts"],"names":["_decorator","Component","Util","Constant","LocalConfig","StorageManager","ClientEvent","ccclass","property","PlayerData","serverTime","localTime","_userId","_playerInfo","_history","_settings","_isNewBee","_dataVersion","instance","_instance","userId","v","settings","playerInfo","history","isNewBee","isPlayerSkillAllUnlock","arrSkill","getTableArr","length","loadGlobalCache","getUserId","loadFromCache","_loadDataByKey","LOCAL_CACHE","PLAYER","HISTORY","SETTINGS","keyName","ret","str","getConfigData","JSON","parse","e","createPlayerInfo","loginData","diamond","gold","key","level","highestLevel","createDate","Date","savePlayerInfoToLocalCache","generateRandomAccount","now","getRandomInt","setUserId","saveAccount","setConfigData","stringify","saveSettingsToLocalCache","saveAll","setConfigDataWithoutSave","DATA_VERSION","updatePlayerInfo","value","isChanged","hasOwnProperty","getSetting","setSetting","clear","addFightTimes","times","fightTimes","getFightTimes","SETTINGS_KEY","FIGHT_TIMES","getLockPlyerSkill","arrLock","filter","item","includes","ID","PLAYER_SKILL","RECOVERY","addPlayerSkill","info","push","dispatchEvent","EVENT_TYPE","PARSE_PLAYER_SKILL","reducePlayerSkill","idx","findIndex","splice"],"mappings":"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","sourcesContent":["import { Util } from './util';\nimport { _decorator, Component } from \"cc\";\nimport { Constant } from \"./constant\";\nimport { LocalConfig } from \"./localConfig\";\nimport { StorageManager } from \"./storageManager\";\nimport { ClientEvent } from './clientEvent';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"PlayerData\")\nexport class PlayerData extends Component {\n    static _instance: PlayerData;\n    \n    public static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new PlayerData();\n        return this._instance;\n    }\n\n    public serverTime: number = 0;\n    public localTime: number = 0;\n\n    private _userId: string = '';\n    private _playerInfo: any = null;\n    private _history: any = null;\n    private _settings: any = null;\n    private _isNewBee: boolean = false;    //默认非新手\n    private _dataVersion: string = '';\n\n    public get userId () {\n        return this._userId;\n    }\n\n    public set userId (v: string) {\n        this._userId = v;\n    }\n\n    public get settings () {\n        return this._settings;\n    }\n\n    public set settings (v: any) {\n        this._settings = v;\n    }\n\n    public get playerInfo () {\n        return this._playerInfo;\n    }\n\n    public set playerInfo (v: any) {\n        this._playerInfo = v;\n    }\n\n    public get history () {\n        return this._history;\n    }\n\n    public set history (v: any) {\n        this._history = v;\n    }\n\n    public get isNewBee () {\n        return this._isNewBee;\n    }\n\n    public set isNewBee (v: boolean) {\n        this._isNewBee = v;\n    }\n\n    //是否已经解锁完成所有技能\n    public get isPlayerSkillAllUnlock () {\n        let arrSkill = LocalConfig.instance.getTableArr(\"playerSkill\");\n        //生命回复技能不在技能列表里面出现，而是在游戏内多次出现，所以减去1\n        return this.playerInfo.arrSkill.length === arrSkill.length - 1;\n    }\n\n    /**\n     * 加上用户数据\n     */\n    public loadGlobalCache() {\n        let userId: string = StorageManager.instance.getUserId();\n        if (userId) {\n            this._userId = userId;\n        }\n    }\n\n    /**\n     * 加载本地存储数据\n     */\n    public loadFromCache() {\n        //读取玩家基础数据\n        this._playerInfo = this._loadDataByKey(Constant.LOCAL_CACHE.PLAYER);\n        this._history = this._loadDataByKey(Constant.LOCAL_CACHE.HISTORY);\n        this._settings = this._loadDataByKey(Constant.LOCAL_CACHE.SETTINGS);\n    }\n\n    /**\n     * 获取本地存储数据\n     * @param {string}keyName \n     * @returns \n     */\n    private _loadDataByKey (keyName: any) {\n        let ret = {};\n        let str = StorageManager.instance.getConfigData(keyName);\n        if (str) {\n            try {\n                ret = JSON.parse(str);\n            } catch (e) {\n                ret = {};\n            }\n        } \n        \n        return ret;\n    }\n\n    /**\n     * 创建角色数据\n     * @param loginData \n     */\n    public createPlayerInfo(loginData?:any) {\n        this._playerInfo = {\n            diamond: 0, //钻石总数\n            gold: 0,//金币数量\n            key: 0, //钥匙数量\n            level: 1,  //当前层级\n            highestLevel: 1,//已经解锁的最高层级\n            arrSkill:[],//已经解锁的玩家技能ID\n            createDate: new Date(), //记录创建时间\n        };\n        \n        this._isNewBee = true; //区分新老玩家\n\n        if (loginData) {\n            for (let key in loginData) {\n                this._playerInfo[key] = loginData[key];\n            }\n        }\n\n        this.savePlayerInfoToLocalCache();\n    }\n\n    /**\n     * 生成随机账户\n     * @returns\n     */\n     public generateRandomAccount () {\n        this.userId = `${Date.now()}${Util.getRandomInt(0, 1000)}`;\n        StorageManager.instance.setUserId(this._userId);\n    }\n\n    /**\n     * 存用户数据\n     * @param userId \n     */\n    public saveAccount(userId: any) {\n        this._userId = userId;\n        StorageManager.instance.setUserId(userId);\n    }\n\n    /**\n     * 保存玩家数据\n     */\n     public savePlayerInfoToLocalCache() {\n        StorageManager.instance.setConfigData(Constant.LOCAL_CACHE.PLAYER, JSON.stringify(this._playerInfo));\n    }\n    \n    /**\n     * 保存玩家设置相关信息\n     */\n    public saveSettingsToLocalCache () {\n        StorageManager.instance.setConfigData(Constant.LOCAL_CACHE.SETTINGS, JSON.stringify(this._settings));\n    }\n\n    /**\n     * 当数据同步完毕，即被覆盖的情况下，需要将数据写入到本地缓存，以免数据丢失\n     */\n     public saveAll() {\n        StorageManager.instance.setConfigDataWithoutSave(Constant.LOCAL_CACHE.PLAYER, JSON.stringify(this._playerInfo));\n        StorageManager.instance.setConfigDataWithoutSave(Constant.LOCAL_CACHE.HISTORY, JSON.stringify(this._history));\n        StorageManager.instance.setConfigDataWithoutSave(Constant.LOCAL_CACHE.SETTINGS, JSON.stringify(this._settings));\n        StorageManager.instance.setConfigData(Constant.LOCAL_CACHE.DATA_VERSION, this._dataVersion);\n    }\n\n    /**\n     * 更新用户信息\n     * 例如钻石、金币、道具\n     * @param {String} key\n     * @param {Number} value\n     */\n    public updatePlayerInfo(key:string, value: any) {\n        let isChanged: boolean= false;\n        if (this._playerInfo.hasOwnProperty(key)) {\n            if (typeof value === 'number') {\n                isChanged = true;\n                this._playerInfo[key] += value;\n                if (this._playerInfo[key] < 0) {\n                    this._playerInfo[key] = 0;\n                }\n                //return;\n            } else if (typeof value === 'boolean' || typeof value === 'string') {\n                isChanged = true;\n                this._playerInfo[key] = value;\n            }\n        }\n        if (isChanged) {\n            //有修改就保存到localcache\n            StorageManager.instance.setConfigData(Constant.LOCAL_CACHE.PLAYER, JSON.stringify(this._playerInfo));\n        }\n    }\n    \n    /**\n     * 获取玩家杂项值\n     * @param {string} key \n     */\n    public getSetting (key: string) {\n        if (!this._settings) {\n            return null;\n        }\n\n        if (!this._settings.hasOwnProperty(key)) {\n            return null;\n        }\n\n        return this._settings[key];\n    }\n\n    /**\n     * 设置玩家杂项值\n     * @param {string} key \n     * @param {*} value \n     */\n    public setSetting (key: string, value: any) {\n        if (!this._settings) {\n            this._settings = {};\n        }\n\n        this._settings[key] = value;\n\n        this.saveSettingsToLocalCache();\n    }\n\n    /**\n     * 清除用户信息\n     */\n    public clear () {\n        this._playerInfo = {};\n        this._settings = {};\n        this.saveAll();\n    }\n\n    /**\n     * 增加战斗次数\n     * @param times \n     */\n    public addFightTimes (times: number = 1) {\n        let fightTimes = this.getFightTimes();\n\n        fightTimes += 1;\n        this.setSetting(Constant.SETTINGS_KEY.FIGHT_TIMES, fightTimes);\n    }\n\n    /**\n     * 获取战斗次数\n     * @returns \n     */\n    public getFightTimes () {\n        let fightTimes = this.getSetting(Constant.SETTINGS_KEY.FIGHT_TIMES);\n\n        if (!fightTimes) {\n            fightTimes = 0;\n            this.setSetting(Constant.SETTINGS_KEY.FIGHT_TIMES, 0);\n        } \n\n        return fightTimes;\n    }\n\n    /**\n     * 获取未解锁的玩家技能\n     *\n     * @memberof playerData\n     */\n    public getLockPlyerSkill (): [] {\n        let arrSkill = LocalConfig.instance.getTableArr(\"playerSkill\");\n        let arrLock: any = [];\n\n        arrLock = arrSkill.filter((item: any)=>{\n            return !this.playerInfo.arrSkill.includes(item.ID) && (item.ID !== Constant.PLAYER_SKILL.RECOVERY);\n        })\n\n        return arrLock;\n    }\n\n    /**\n     * 添加玩家某项技能\n     *\n     * @param {*} info\n     * @memberof playerData\n     */\n    public addPlayerSkill (info: any) {\n        if (!this.playerInfo.arrSkill.includes(info.ID)) {\n            this.playerInfo.arrSkill.push(info.ID);\n            this.savePlayerInfoToLocalCache();\n            ClientEvent.dispatchEvent(Constant.EVENT_TYPE.PARSE_PLAYER_SKILL);\n        }\n    }\n\n    /**\n     * 删除玩家某项技能\n     *\n     * @param {*} info\n     * @memberof playerData\n     */\n    public reducePlayerSkill (info: any) {\n        if (this.playerInfo.arrSkill.includes(info.ID)) {\n            let idx = this.playerInfo.arrSkill.findIndex((item: number)=>{ return item === info.ID});\n            this.playerInfo.arrSkill.splice(idx, 1);\n            this.savePlayerInfoToLocalCache();\n            ClientEvent.dispatchEvent(Constant.EVENT_TYPE.PARSE_PLAYER_SKILL);\n        }\n    }\n}\n"]}