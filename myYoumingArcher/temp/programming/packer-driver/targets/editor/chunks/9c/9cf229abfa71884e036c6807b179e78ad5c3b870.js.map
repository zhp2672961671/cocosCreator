{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,uCAAD,EAA8G,uCAA9G,EAA0N,uCAA1N,EAAmU,uCAAnU,EAA8a,uCAA9a,EAA0hB,uCAA1hB,EAAioB,uCAAjoB,EAA4uB,uCAA5uB,EAAy1B,uCAAz1B,EAAi8B,uCAAj8B,EAAgjC,wCAAhjC,EAAqpC,wCAArpC,EAAivC,wCAAjvC,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/audioManager.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/clientEvent.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/constant.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/csvManager.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/localConfig.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/lodash.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/playerData.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/resourceUtil.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/sdkUtil.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/storageManager.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/framework/util.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/login.ts\"), () => import(\"file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/main.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}