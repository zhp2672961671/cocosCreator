{"version":3,"sources":["file:///E:/myCocosGame/cocosCreator/myYoumingArcher/assets/script/main.ts"],"names":["_decorator","Component","game","Game","PhysicsSystem","profiler","AudioManager","Constant","PlayerData","StorageManager","LocalConfig","Util","SdkUtil","ccclass","property","main","_minLoadDuration","onEnable","onDisable","start","frameRate","instance","getGlobalData","GAME_FRAME","window","wx","checkIsLowPhone","setGlobalData","console","log","fixedTimeStep","isDebugOpen","showStats","hideStats","loadGlobalCache","userId","generateRandomAccount","loadFromCache","playerInfo","createDate","createPlayerInfo","loadConfig","shareGame","GAME_NAME_CH","setMusic","on","EVENT_HIDE","settings","hideTime","Date","now","saveAll","save","update","deltaTime"],"mappings":"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","sourcesContent":["import { AudioManager } from './framework/audioManager';\r\n// import { GameManager } from './fight/gameManager';\r\nimport { Constant } from './framework/constant';\r\nimport { _decorator, Component, game, Game, PhysicsSystem, profiler, sys, find } from 'cc';\r\nimport { PlayerData } from './framework/playerData';\r\nimport { StorageManager } from './framework/storageManager';\r\nimport { LocalConfig } from './framework/localConfig';\r\nimport { Util } from './framework/util';\r\nimport { SdkUtil } from './framework/sdkUtil';\r\n// import { UIManager } from './framework/uiManager';\r\n//挂载到fight场景下的canvas节点\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('main')\r\nexport class main extends Component {\r\n    private _minLoadDuration: number = 4;//加载开屏最小持续时间\r\n\r\n    onEnable () {\r\n    }\r\n\r\n    onDisable () {\r\n    }\r\n    start() {\r\n        let frameRate = StorageManager.instance.getGlobalData(\"frameRate\");\r\n        if (typeof frameRate !== \"number\") {\r\n            frameRate = Constant.GAME_FRAME;\r\n            //@ts-ignore\r\n            if (window.wx && Util.checkIsLowPhone()) {\r\n                frameRate = 30;\r\n            }\r\n\r\n            StorageManager.instance.setGlobalData(\"frameRate\", frameRate);\r\n        }\r\n        console.log(\"###frameRate\", frameRate);\r\n        // 设置帧率\r\n        game.frameRate = frameRate;\r\n        // 获取或设置每步模拟消耗的固定时间（以 s 为单位）。\r\n        PhysicsSystem.instance.fixedTimeStep = 1 / frameRate;\r\n\r\n        let isDebugOpen = StorageManager.instance.getGlobalData(\"debug\") ?? false;\r\n        isDebugOpen === true ? profiler.showStats() : profiler.hideStats();\r\n\r\n        // 加上用户id\r\n        PlayerData.instance.loadGlobalCache();\r\n        if (!PlayerData.instance.userId) {\r\n            PlayerData.instance.generateRandomAccount();\r\n            console.log(\"###生成随机userId\", PlayerData.instance.userId);\r\n        }\r\n        // 处理用户数据\r\n        PlayerData.instance.loadFromCache();\r\n        if (!PlayerData.instance.playerInfo || !PlayerData.instance.playerInfo.createDate) {\r\n            PlayerData.instance.createPlayerInfo();\r\n        }\r\n         //加载CSV相关配置\r\n         LocalConfig.instance.loadConfig(()=>{\r\n            SdkUtil.shareGame(Constant.GAME_NAME_CH, \"\");\r\n            // this._loadFinish();\r\n        })\r\n\r\n\r\n\r\n        //AudioManager.instance.init();\r\n        AudioManager.instance.setMusic(0.3);\r\n        game.on(Game.EVENT_HIDE, ()=>{\r\n            if (!PlayerData.instance.settings) {\r\n                PlayerData.instance.settings = {}\r\n            }\r\n\r\n            PlayerData.instance.settings.hideTime = Date.now();\r\n            PlayerData.instance.saveAll();\r\n            StorageManager.instance.save();\r\n        })\r\n\r\n    }\r\n    // private _loadFinish () {\r\n    //     GameManager.isFirstLoad = true;\r\n\r\n    //     this.scheduleOnce(()=>{\r\n    //         UIManager.instance.showDialog(\"home/homePanel\", [], ()=>{\r\n    //             find(\"CanvasLogin\")?.destroy();\r\n    //             console.log(\"###开屏界面展示时长\", Date.now() - Constant.LOGIN_TIME);\r\n    //         });\r\n    //     }, this._minLoadDuration)\r\n    // }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}